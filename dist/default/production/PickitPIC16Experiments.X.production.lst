

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat May 25 14:12:57 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x620,48
    34                           	dabs	1,0x5A0,80
    35                           	dabs	1,0x520,80
    36                           	dabs	1,0x4C0,48
    37                           	dabs	1,0x22F0,0,_uartFifoBuff
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.05
    41                           ; Generated 20/12/2018 GMT
    42                           ; 
    43                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F1829 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  0111                     	;# 
   126  0112                     	;# 
   127  0113                     	;# 
   128  0114                     	;# 
   129  0115                     	;# 
   130  0116                     	;# 
   131  0117                     	;# 
   132  0118                     	;# 
   133  0119                     	;# 
   134  011A                     	;# 
   135  011B                     	;# 
   136  011D                     	;# 
   137  011E                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  018E                     	;# 
   141  0191                     	;# 
   142  0191                     	;# 
   143  0192                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0193                     	;# 
   147  0194                     	;# 
   148  0195                     	;# 
   149  0196                     	;# 
   150  0199                     	;# 
   151  019A                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019C                     	;# 
   155  019D                     	;# 
   156  019E                     	;# 
   157  019F                     	;# 
   158  020C                     	;# 
   159  020D                     	;# 
   160  020E                     	;# 
   161  0211                     	;# 
   162  0211                     	;# 
   163  0212                     	;# 
   164  0212                     	;# 
   165  0213                     	;# 
   166  0213                     	;# 
   167  0214                     	;# 
   168  0214                     	;# 
   169  0215                     	;# 
   170  0215                     	;# 
   171  0215                     	;# 
   172  0216                     	;# 
   173  0216                     	;# 
   174  0217                     	;# 
   175  0217                     	;# 
   176  0219                     	;# 
   177  021A                     	;# 
   178  021B                     	;# 
   179  021C                     	;# 
   180  021D                     	;# 
   181  021E                     	;# 
   182  021F                     	;# 
   183  0291                     	;# 
   184  0291                     	;# 
   185  0292                     	;# 
   186  0293                     	;# 
   187  0294                     	;# 
   188  0295                     	;# 
   189  0295                     	;# 
   190  0296                     	;# 
   191  0298                     	;# 
   192  0298                     	;# 
   193  0299                     	;# 
   194  029A                     	;# 
   195  029B                     	;# 
   196  029C                     	;# 
   197  029D                     	;# 
   198  029E                     	;# 
   199  0311                     	;# 
   200  0311                     	;# 
   201  0312                     	;# 
   202  0313                     	;# 
   203  0318                     	;# 
   204  0318                     	;# 
   205  0319                     	;# 
   206  031A                     	;# 
   207  038C                     	;# 
   208  038D                     	;# 
   209  038E                     	;# 
   210  0391                     	;# 
   211  0392                     	;# 
   212  0393                     	;# 
   213  0394                     	;# 
   214  0395                     	;# 
   215  0396                     	;# 
   216  039A                     	;# 
   217  039C                     	;# 
   218  039D                     	;# 
   219  039E                     	;# 
   220  039F                     	;# 
   221  0415                     	;# 
   222  0416                     	;# 
   223  0417                     	;# 
   224  041C                     	;# 
   225  041D                     	;# 
   226  041E                     	;# 
   227  0FE4                     	;# 
   228  0FE5                     	;# 
   229  0FE6                     	;# 
   230  0FE7                     	;# 
   231  0FE8                     	;# 
   232  0FE9                     	;# 
   233  0FEA                     	;# 
   234  0FEB                     	;# 
   235  0FED                     	;# 
   236  0FEE                     	;# 
   237  0FEF                     	;# 
   238  0000                     	;# 
   239  0001                     	;# 
   240  0002                     	;# 
   241  0003                     	;# 
   242  0004                     	;# 
   243  0005                     	;# 
   244  0006                     	;# 
   245  0007                     	;# 
   246  0008                     	;# 
   247  0009                     	;# 
   248  000A                     	;# 
   249  000B                     	;# 
   250  000C                     	;# 
   251  000D                     	;# 
   252  000E                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0013                     	;# 
   256  0014                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0016                     	;# 
   260  0017                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  0091                     	;# 
   272  0092                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  0111                     	;# 
   290  0112                     	;# 
   291  0113                     	;# 
   292  0114                     	;# 
   293  0115                     	;# 
   294  0116                     	;# 
   295  0117                     	;# 
   296  0118                     	;# 
   297  0119                     	;# 
   298  011A                     	;# 
   299  011B                     	;# 
   300  011D                     	;# 
   301  011E                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  018E                     	;# 
   305  0191                     	;# 
   306  0191                     	;# 
   307  0192                     	;# 
   308  0193                     	;# 
   309  0193                     	;# 
   310  0193                     	;# 
   311  0194                     	;# 
   312  0195                     	;# 
   313  0196                     	;# 
   314  0199                     	;# 
   315  019A                     	;# 
   316  019B                     	;# 
   317  019B                     	;# 
   318  019C                     	;# 
   319  019D                     	;# 
   320  019E                     	;# 
   321  019F                     	;# 
   322  020C                     	;# 
   323  020D                     	;# 
   324  020E                     	;# 
   325  0211                     	;# 
   326  0211                     	;# 
   327  0212                     	;# 
   328  0212                     	;# 
   329  0213                     	;# 
   330  0213                     	;# 
   331  0214                     	;# 
   332  0214                     	;# 
   333  0215                     	;# 
   334  0215                     	;# 
   335  0215                     	;# 
   336  0216                     	;# 
   337  0216                     	;# 
   338  0217                     	;# 
   339  0217                     	;# 
   340  0219                     	;# 
   341  021A                     	;# 
   342  021B                     	;# 
   343  021C                     	;# 
   344  021D                     	;# 
   345  021E                     	;# 
   346  021F                     	;# 
   347  0291                     	;# 
   348  0291                     	;# 
   349  0292                     	;# 
   350  0293                     	;# 
   351  0294                     	;# 
   352  0295                     	;# 
   353  0295                     	;# 
   354  0296                     	;# 
   355  0298                     	;# 
   356  0298                     	;# 
   357  0299                     	;# 
   358  029A                     	;# 
   359  029B                     	;# 
   360  029C                     	;# 
   361  029D                     	;# 
   362  029E                     	;# 
   363  0311                     	;# 
   364  0311                     	;# 
   365  0312                     	;# 
   366  0313                     	;# 
   367  0318                     	;# 
   368  0318                     	;# 
   369  0319                     	;# 
   370  031A                     	;# 
   371  038C                     	;# 
   372  038D                     	;# 
   373  038E                     	;# 
   374  0391                     	;# 
   375  0392                     	;# 
   376  0393                     	;# 
   377  0394                     	;# 
   378  0395                     	;# 
   379  0396                     	;# 
   380  039A                     	;# 
   381  039C                     	;# 
   382  039D                     	;# 
   383  039E                     	;# 
   384  039F                     	;# 
   385  0415                     	;# 
   386  0416                     	;# 
   387  0417                     	;# 
   388  041C                     	;# 
   389  041D                     	;# 
   390  041E                     	;# 
   391  0FE4                     	;# 
   392  0FE5                     	;# 
   393  0FE6                     	;# 
   394  0FE7                     	;# 
   395  0FE8                     	;# 
   396  0FE9                     	;# 
   397  0FEA                     	;# 
   398  0FEB                     	;# 
   399  0FED                     	;# 
   400  0FEE                     	;# 
   401  0FEF                     	;# 
   402  0000                     	;# 
   403  0001                     	;# 
   404  0002                     	;# 
   405  0003                     	;# 
   406  0004                     	;# 
   407  0005                     	;# 
   408  0006                     	;# 
   409  0007                     	;# 
   410  0008                     	;# 
   411  0009                     	;# 
   412  000A                     	;# 
   413  000B                     	;# 
   414  000C                     	;# 
   415  000D                     	;# 
   416  000E                     	;# 
   417  0011                     	;# 
   418  0012                     	;# 
   419  0013                     	;# 
   420  0014                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0016                     	;# 
   424  0017                     	;# 
   425  0018                     	;# 
   426  0019                     	;# 
   427  001A                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  001E                     	;# 
   431  001F                     	;# 
   432  008C                     	;# 
   433  008D                     	;# 
   434  008E                     	;# 
   435  0091                     	;# 
   436  0092                     	;# 
   437  0093                     	;# 
   438  0094                     	;# 
   439  0095                     	;# 
   440  0096                     	;# 
   441  0097                     	;# 
   442  0098                     	;# 
   443  0099                     	;# 
   444  009A                     	;# 
   445  009B                     	;# 
   446  009B                     	;# 
   447  009C                     	;# 
   448  009D                     	;# 
   449  009E                     	;# 
   450  010C                     	;# 
   451  010D                     	;# 
   452  010E                     	;# 
   453  0111                     	;# 
   454  0112                     	;# 
   455  0113                     	;# 
   456  0114                     	;# 
   457  0115                     	;# 
   458  0116                     	;# 
   459  0117                     	;# 
   460  0118                     	;# 
   461  0119                     	;# 
   462  011A                     	;# 
   463  011B                     	;# 
   464  011D                     	;# 
   465  011E                     	;# 
   466  018C                     	;# 
   467  018D                     	;# 
   468  018E                     	;# 
   469  0191                     	;# 
   470  0191                     	;# 
   471  0192                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0193                     	;# 
   475  0194                     	;# 
   476  0195                     	;# 
   477  0196                     	;# 
   478  0199                     	;# 
   479  019A                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019C                     	;# 
   483  019D                     	;# 
   484  019E                     	;# 
   485  019F                     	;# 
   486  020C                     	;# 
   487  020D                     	;# 
   488  020E                     	;# 
   489  0211                     	;# 
   490  0211                     	;# 
   491  0212                     	;# 
   492  0212                     	;# 
   493  0213                     	;# 
   494  0213                     	;# 
   495  0214                     	;# 
   496  0214                     	;# 
   497  0215                     	;# 
   498  0215                     	;# 
   499  0215                     	;# 
   500  0216                     	;# 
   501  0216                     	;# 
   502  0217                     	;# 
   503  0217                     	;# 
   504  0219                     	;# 
   505  021A                     	;# 
   506  021B                     	;# 
   507  021C                     	;# 
   508  021D                     	;# 
   509  021E                     	;# 
   510  021F                     	;# 
   511  0291                     	;# 
   512  0291                     	;# 
   513  0292                     	;# 
   514  0293                     	;# 
   515  0294                     	;# 
   516  0295                     	;# 
   517  0295                     	;# 
   518  0296                     	;# 
   519  0298                     	;# 
   520  0298                     	;# 
   521  0299                     	;# 
   522  029A                     	;# 
   523  029B                     	;# 
   524  029C                     	;# 
   525  029D                     	;# 
   526  029E                     	;# 
   527  0311                     	;# 
   528  0311                     	;# 
   529  0312                     	;# 
   530  0313                     	;# 
   531  0318                     	;# 
   532  0318                     	;# 
   533  0319                     	;# 
   534  031A                     	;# 
   535  038C                     	;# 
   536  038D                     	;# 
   537  038E                     	;# 
   538  0391                     	;# 
   539  0392                     	;# 
   540  0393                     	;# 
   541  0394                     	;# 
   542  0395                     	;# 
   543  0396                     	;# 
   544  039A                     	;# 
   545  039C                     	;# 
   546  039D                     	;# 
   547  039E                     	;# 
   548  039F                     	;# 
   549  0415                     	;# 
   550  0416                     	;# 
   551  0417                     	;# 
   552  041C                     	;# 
   553  041D                     	;# 
   554  041E                     	;# 
   555  0FE4                     	;# 
   556  0FE5                     	;# 
   557  0FE6                     	;# 
   558  0FE7                     	;# 
   559  0FE8                     	;# 
   560  0FE9                     	;# 
   561  0FEA                     	;# 
   562  0FEB                     	;# 
   563  0FED                     	;# 
   564  0FEE                     	;# 
   565  0FEF                     	;# 
   566  0000                     	;# 
   567  0001                     	;# 
   568  0002                     	;# 
   569  0003                     	;# 
   570  0004                     	;# 
   571  0005                     	;# 
   572  0006                     	;# 
   573  0007                     	;# 
   574  0008                     	;# 
   575  0009                     	;# 
   576  000A                     	;# 
   577  000B                     	;# 
   578  000C                     	;# 
   579  000D                     	;# 
   580  000E                     	;# 
   581  0011                     	;# 
   582  0012                     	;# 
   583  0013                     	;# 
   584  0014                     	;# 
   585  0015                     	;# 
   586  0016                     	;# 
   587  0016                     	;# 
   588  0017                     	;# 
   589  0018                     	;# 
   590  0019                     	;# 
   591  001A                     	;# 
   592  001B                     	;# 
   593  001C                     	;# 
   594  001E                     	;# 
   595  001F                     	;# 
   596  008C                     	;# 
   597  008D                     	;# 
   598  008E                     	;# 
   599  0091                     	;# 
   600  0092                     	;# 
   601  0093                     	;# 
   602  0094                     	;# 
   603  0095                     	;# 
   604  0096                     	;# 
   605  0097                     	;# 
   606  0098                     	;# 
   607  0099                     	;# 
   608  009A                     	;# 
   609  009B                     	;# 
   610  009B                     	;# 
   611  009C                     	;# 
   612  009D                     	;# 
   613  009E                     	;# 
   614  010C                     	;# 
   615  010D                     	;# 
   616  010E                     	;# 
   617  0111                     	;# 
   618  0112                     	;# 
   619  0113                     	;# 
   620  0114                     	;# 
   621  0115                     	;# 
   622  0116                     	;# 
   623  0117                     	;# 
   624  0118                     	;# 
   625  0119                     	;# 
   626  011A                     	;# 
   627  011B                     	;# 
   628  011D                     	;# 
   629  011E                     	;# 
   630  018C                     	;# 
   631  018D                     	;# 
   632  018E                     	;# 
   633  0191                     	;# 
   634  0191                     	;# 
   635  0192                     	;# 
   636  0193                     	;# 
   637  0193                     	;# 
   638  0193                     	;# 
   639  0194                     	;# 
   640  0195                     	;# 
   641  0196                     	;# 
   642  0199                     	;# 
   643  019A                     	;# 
   644  019B                     	;# 
   645  019B                     	;# 
   646  019C                     	;# 
   647  019D                     	;# 
   648  019E                     	;# 
   649  019F                     	;# 
   650  020C                     	;# 
   651  020D                     	;# 
   652  020E                     	;# 
   653  0211                     	;# 
   654  0211                     	;# 
   655  0212                     	;# 
   656  0212                     	;# 
   657  0213                     	;# 
   658  0213                     	;# 
   659  0214                     	;# 
   660  0214                     	;# 
   661  0215                     	;# 
   662  0215                     	;# 
   663  0215                     	;# 
   664  0216                     	;# 
   665  0216                     	;# 
   666  0217                     	;# 
   667  0217                     	;# 
   668  0219                     	;# 
   669  021A                     	;# 
   670  021B                     	;# 
   671  021C                     	;# 
   672  021D                     	;# 
   673  021E                     	;# 
   674  021F                     	;# 
   675  0291                     	;# 
   676  0291                     	;# 
   677  0292                     	;# 
   678  0293                     	;# 
   679  0294                     	;# 
   680  0295                     	;# 
   681  0295                     	;# 
   682  0296                     	;# 
   683  0298                     	;# 
   684  0298                     	;# 
   685  0299                     	;# 
   686  029A                     	;# 
   687  029B                     	;# 
   688  029C                     	;# 
   689  029D                     	;# 
   690  029E                     	;# 
   691  0311                     	;# 
   692  0311                     	;# 
   693  0312                     	;# 
   694  0313                     	;# 
   695  0318                     	;# 
   696  0318                     	;# 
   697  0319                     	;# 
   698  031A                     	;# 
   699  038C                     	;# 
   700  038D                     	;# 
   701  038E                     	;# 
   702  0391                     	;# 
   703  0392                     	;# 
   704  0393                     	;# 
   705  0394                     	;# 
   706  0395                     	;# 
   707  0396                     	;# 
   708  039A                     	;# 
   709  039C                     	;# 
   710  039D                     	;# 
   711  039E                     	;# 
   712  039F                     	;# 
   713  0415                     	;# 
   714  0416                     	;# 
   715  0417                     	;# 
   716  041C                     	;# 
   717  041D                     	;# 
   718  041E                     	;# 
   719  0FE4                     	;# 
   720  0FE5                     	;# 
   721  0FE6                     	;# 
   722  0FE7                     	;# 
   723  0FE8                     	;# 
   724  0FE9                     	;# 
   725  0FEA                     	;# 
   726  0FEB                     	;# 
   727  0FED                     	;# 
   728  0FEE                     	;# 
   729  0FEF                     	;# 
   730  0000                     	;# 
   731  0001                     	;# 
   732  0002                     	;# 
   733  0003                     	;# 
   734  0004                     	;# 
   735  0005                     	;# 
   736  0006                     	;# 
   737  0007                     	;# 
   738  0008                     	;# 
   739  0009                     	;# 
   740  000A                     	;# 
   741  000B                     	;# 
   742  000C                     	;# 
   743  000D                     	;# 
   744  000E                     	;# 
   745  0011                     	;# 
   746  0012                     	;# 
   747  0013                     	;# 
   748  0014                     	;# 
   749  0015                     	;# 
   750  0016                     	;# 
   751  0016                     	;# 
   752  0017                     	;# 
   753  0018                     	;# 
   754  0019                     	;# 
   755  001A                     	;# 
   756  001B                     	;# 
   757  001C                     	;# 
   758  001E                     	;# 
   759  001F                     	;# 
   760  008C                     	;# 
   761  008D                     	;# 
   762  008E                     	;# 
   763  0091                     	;# 
   764  0092                     	;# 
   765  0093                     	;# 
   766  0094                     	;# 
   767  0095                     	;# 
   768  0096                     	;# 
   769  0097                     	;# 
   770  0098                     	;# 
   771  0099                     	;# 
   772  009A                     	;# 
   773  009B                     	;# 
   774  009B                     	;# 
   775  009C                     	;# 
   776  009D                     	;# 
   777  009E                     	;# 
   778  010C                     	;# 
   779  010D                     	;# 
   780  010E                     	;# 
   781  0111                     	;# 
   782  0112                     	;# 
   783  0113                     	;# 
   784  0114                     	;# 
   785  0115                     	;# 
   786  0116                     	;# 
   787  0117                     	;# 
   788  0118                     	;# 
   789  0119                     	;# 
   790  011A                     	;# 
   791  011B                     	;# 
   792  011D                     	;# 
   793  011E                     	;# 
   794  018C                     	;# 
   795  018D                     	;# 
   796  018E                     	;# 
   797  0191                     	;# 
   798  0191                     	;# 
   799  0192                     	;# 
   800  0193                     	;# 
   801  0193                     	;# 
   802  0193                     	;# 
   803  0194                     	;# 
   804  0195                     	;# 
   805  0196                     	;# 
   806  0199                     	;# 
   807  019A                     	;# 
   808  019B                     	;# 
   809  019B                     	;# 
   810  019C                     	;# 
   811  019D                     	;# 
   812  019E                     	;# 
   813  019F                     	;# 
   814  020C                     	;# 
   815  020D                     	;# 
   816  020E                     	;# 
   817  0211                     	;# 
   818  0211                     	;# 
   819  0212                     	;# 
   820  0212                     	;# 
   821  0213                     	;# 
   822  0213                     	;# 
   823  0214                     	;# 
   824  0214                     	;# 
   825  0215                     	;# 
   826  0215                     	;# 
   827  0215                     	;# 
   828  0216                     	;# 
   829  0216                     	;# 
   830  0217                     	;# 
   831  0217                     	;# 
   832  0219                     	;# 
   833  021A                     	;# 
   834  021B                     	;# 
   835  021C                     	;# 
   836  021D                     	;# 
   837  021E                     	;# 
   838  021F                     	;# 
   839  0291                     	;# 
   840  0291                     	;# 
   841  0292                     	;# 
   842  0293                     	;# 
   843  0294                     	;# 
   844  0295                     	;# 
   845  0295                     	;# 
   846  0296                     	;# 
   847  0298                     	;# 
   848  0298                     	;# 
   849  0299                     	;# 
   850  029A                     	;# 
   851  029B                     	;# 
   852  029C                     	;# 
   853  029D                     	;# 
   854  029E                     	;# 
   855  0311                     	;# 
   856  0311                     	;# 
   857  0312                     	;# 
   858  0313                     	;# 
   859  0318                     	;# 
   860  0318                     	;# 
   861  0319                     	;# 
   862  031A                     	;# 
   863  038C                     	;# 
   864  038D                     	;# 
   865  038E                     	;# 
   866  0391                     	;# 
   867  0392                     	;# 
   868  0393                     	;# 
   869  0394                     	;# 
   870  0395                     	;# 
   871  0396                     	;# 
   872  039A                     	;# 
   873  039C                     	;# 
   874  039D                     	;# 
   875  039E                     	;# 
   876  039F                     	;# 
   877  0415                     	;# 
   878  0416                     	;# 
   879  0417                     	;# 
   880  041C                     	;# 
   881  041D                     	;# 
   882  041E                     	;# 
   883  0FE4                     	;# 
   884  0FE5                     	;# 
   885  0FE6                     	;# 
   886  0FE7                     	;# 
   887  0FE8                     	;# 
   888  0FE9                     	;# 
   889  0FEA                     	;# 
   890  0FEB                     	;# 
   891  0FED                     	;# 
   892  0FEE                     	;# 
   893  0FEF                     	;# 
   894  0000                     	;# 
   895  0001                     	;# 
   896  0002                     	;# 
   897  0003                     	;# 
   898  0004                     	;# 
   899  0005                     	;# 
   900  0006                     	;# 
   901  0007                     	;# 
   902  0008                     	;# 
   903  0009                     	;# 
   904  000A                     	;# 
   905  000B                     	;# 
   906  000C                     	;# 
   907  000D                     	;# 
   908  000E                     	;# 
   909  0011                     	;# 
   910  0012                     	;# 
   911  0013                     	;# 
   912  0014                     	;# 
   913  0015                     	;# 
   914  0016                     	;# 
   915  0016                     	;# 
   916  0017                     	;# 
   917  0018                     	;# 
   918  0019                     	;# 
   919  001A                     	;# 
   920  001B                     	;# 
   921  001C                     	;# 
   922  001E                     	;# 
   923  001F                     	;# 
   924  008C                     	;# 
   925  008D                     	;# 
   926  008E                     	;# 
   927  0091                     	;# 
   928  0092                     	;# 
   929  0093                     	;# 
   930  0094                     	;# 
   931  0095                     	;# 
   932  0096                     	;# 
   933  0097                     	;# 
   934  0098                     	;# 
   935  0099                     	;# 
   936  009A                     	;# 
   937  009B                     	;# 
   938  009B                     	;# 
   939  009C                     	;# 
   940  009D                     	;# 
   941  009E                     	;# 
   942  010C                     	;# 
   943  010D                     	;# 
   944  010E                     	;# 
   945  0111                     	;# 
   946  0112                     	;# 
   947  0113                     	;# 
   948  0114                     	;# 
   949  0115                     	;# 
   950  0116                     	;# 
   951  0117                     	;# 
   952  0118                     	;# 
   953  0119                     	;# 
   954  011A                     	;# 
   955  011B                     	;# 
   956  011D                     	;# 
   957  011E                     	;# 
   958  018C                     	;# 
   959  018D                     	;# 
   960  018E                     	;# 
   961  0191                     	;# 
   962  0191                     	;# 
   963  0192                     	;# 
   964  0193                     	;# 
   965  0193                     	;# 
   966  0193                     	;# 
   967  0194                     	;# 
   968  0195                     	;# 
   969  0196                     	;# 
   970  0199                     	;# 
   971  019A                     	;# 
   972  019B                     	;# 
   973  019B                     	;# 
   974  019C                     	;# 
   975  019D                     	;# 
   976  019E                     	;# 
   977  019F                     	;# 
   978  020C                     	;# 
   979  020D                     	;# 
   980  020E                     	;# 
   981  0211                     	;# 
   982  0211                     	;# 
   983  0212                     	;# 
   984  0212                     	;# 
   985  0213                     	;# 
   986  0213                     	;# 
   987  0214                     	;# 
   988  0214                     	;# 
   989  0215                     	;# 
   990  0215                     	;# 
   991  0215                     	;# 
   992  0216                     	;# 
   993  0216                     	;# 
   994  0217                     	;# 
   995  0217                     	;# 
   996  0219                     	;# 
   997  021A                     	;# 
   998  021B                     	;# 
   999  021C                     	;# 
  1000  021D                     	;# 
  1001  021E                     	;# 
  1002  021F                     	;# 
  1003  0291                     	;# 
  1004  0291                     	;# 
  1005  0292                     	;# 
  1006  0293                     	;# 
  1007  0294                     	;# 
  1008  0295                     	;# 
  1009  0295                     	;# 
  1010  0296                     	;# 
  1011  0298                     	;# 
  1012  0298                     	;# 
  1013  0299                     	;# 
  1014  029A                     	;# 
  1015  029B                     	;# 
  1016  029C                     	;# 
  1017  029D                     	;# 
  1018  029E                     	;# 
  1019  0311                     	;# 
  1020  0311                     	;# 
  1021  0312                     	;# 
  1022  0313                     	;# 
  1023  0318                     	;# 
  1024  0318                     	;# 
  1025  0319                     	;# 
  1026  031A                     	;# 
  1027  038C                     	;# 
  1028  038D                     	;# 
  1029  038E                     	;# 
  1030  0391                     	;# 
  1031  0392                     	;# 
  1032  0393                     	;# 
  1033  0394                     	;# 
  1034  0395                     	;# 
  1035  0396                     	;# 
  1036  039A                     	;# 
  1037  039C                     	;# 
  1038  039D                     	;# 
  1039  039E                     	;# 
  1040  039F                     	;# 
  1041  0415                     	;# 
  1042  0416                     	;# 
  1043  0417                     	;# 
  1044  041C                     	;# 
  1045  041D                     	;# 
  1046  041E                     	;# 
  1047  0FE4                     	;# 
  1048  0FE5                     	;# 
  1049  0FE6                     	;# 
  1050  0FE7                     	;# 
  1051  0FE8                     	;# 
  1052  0FE9                     	;# 
  1053  0FEA                     	;# 
  1054  0FEB                     	;# 
  1055  0FED                     	;# 
  1056  0FEE                     	;# 
  1057  0FEF                     	;# 
  1058  0000                     	;# 
  1059  0001                     	;# 
  1060  0002                     	;# 
  1061  0003                     	;# 
  1062  0004                     	;# 
  1063  0005                     	;# 
  1064  0006                     	;# 
  1065  0007                     	;# 
  1066  0008                     	;# 
  1067  0009                     	;# 
  1068  000A                     	;# 
  1069  000B                     	;# 
  1070  000C                     	;# 
  1071  000D                     	;# 
  1072  000E                     	;# 
  1073  0011                     	;# 
  1074  0012                     	;# 
  1075  0013                     	;# 
  1076  0014                     	;# 
  1077  0015                     	;# 
  1078  0016                     	;# 
  1079  0016                     	;# 
  1080  0017                     	;# 
  1081  0018                     	;# 
  1082  0019                     	;# 
  1083  001A                     	;# 
  1084  001B                     	;# 
  1085  001C                     	;# 
  1086  001E                     	;# 
  1087  001F                     	;# 
  1088  008C                     	;# 
  1089  008D                     	;# 
  1090  008E                     	;# 
  1091  0091                     	;# 
  1092  0092                     	;# 
  1093  0093                     	;# 
  1094  0094                     	;# 
  1095  0095                     	;# 
  1096  0096                     	;# 
  1097  0097                     	;# 
  1098  0098                     	;# 
  1099  0099                     	;# 
  1100  009A                     	;# 
  1101  009B                     	;# 
  1102  009B                     	;# 
  1103  009C                     	;# 
  1104  009D                     	;# 
  1105  009E                     	;# 
  1106  010C                     	;# 
  1107  010D                     	;# 
  1108  010E                     	;# 
  1109  0111                     	;# 
  1110  0112                     	;# 
  1111  0113                     	;# 
  1112  0114                     	;# 
  1113  0115                     	;# 
  1114  0116                     	;# 
  1115  0117                     	;# 
  1116  0118                     	;# 
  1117  0119                     	;# 
  1118  011A                     	;# 
  1119  011B                     	;# 
  1120  011D                     	;# 
  1121  011E                     	;# 
  1122  018C                     	;# 
  1123  018D                     	;# 
  1124  018E                     	;# 
  1125  0191                     	;# 
  1126  0191                     	;# 
  1127  0192                     	;# 
  1128  0193                     	;# 
  1129  0193                     	;# 
  1130  0193                     	;# 
  1131  0194                     	;# 
  1132  0195                     	;# 
  1133  0196                     	;# 
  1134  0199                     	;# 
  1135  019A                     	;# 
  1136  019B                     	;# 
  1137  019B                     	;# 
  1138  019C                     	;# 
  1139  019D                     	;# 
  1140  019E                     	;# 
  1141  019F                     	;# 
  1142  020C                     	;# 
  1143  020D                     	;# 
  1144  020E                     	;# 
  1145  0211                     	;# 
  1146  0211                     	;# 
  1147  0212                     	;# 
  1148  0212                     	;# 
  1149  0213                     	;# 
  1150  0213                     	;# 
  1151  0214                     	;# 
  1152  0214                     	;# 
  1153  0215                     	;# 
  1154  0215                     	;# 
  1155  0215                     	;# 
  1156  0216                     	;# 
  1157  0216                     	;# 
  1158  0217                     	;# 
  1159  0217                     	;# 
  1160  0219                     	;# 
  1161  021A                     	;# 
  1162  021B                     	;# 
  1163  021C                     	;# 
  1164  021D                     	;# 
  1165  021E                     	;# 
  1166  021F                     	;# 
  1167  0291                     	;# 
  1168  0291                     	;# 
  1169  0292                     	;# 
  1170  0293                     	;# 
  1171  0294                     	;# 
  1172  0295                     	;# 
  1173  0295                     	;# 
  1174  0296                     	;# 
  1175  0298                     	;# 
  1176  0298                     	;# 
  1177  0299                     	;# 
  1178  029A                     	;# 
  1179  029B                     	;# 
  1180  029C                     	;# 
  1181  029D                     	;# 
  1182  029E                     	;# 
  1183  0311                     	;# 
  1184  0311                     	;# 
  1185  0312                     	;# 
  1186  0313                     	;# 
  1187  0318                     	;# 
  1188  0318                     	;# 
  1189  0319                     	;# 
  1190  031A                     	;# 
  1191  038C                     	;# 
  1192  038D                     	;# 
  1193  038E                     	;# 
  1194  0391                     	;# 
  1195  0392                     	;# 
  1196  0393                     	;# 
  1197  0394                     	;# 
  1198  0395                     	;# 
  1199  0396                     	;# 
  1200  039A                     	;# 
  1201  039C                     	;# 
  1202  039D                     	;# 
  1203  039E                     	;# 
  1204  039F                     	;# 
  1205  0415                     	;# 
  1206  0416                     	;# 
  1207  0417                     	;# 
  1208  041C                     	;# 
  1209  041D                     	;# 
  1210  041E                     	;# 
  1211  0FE4                     	;# 
  1212  0FE5                     	;# 
  1213  0FE6                     	;# 
  1214  0FE7                     	;# 
  1215  0FE8                     	;# 
  1216  0FE9                     	;# 
  1217  0FEA                     	;# 
  1218  0FEB                     	;# 
  1219  0FED                     	;# 
  1220  0FEE                     	;# 
  1221  0FEF                     	;# 
  1222  0000                     	;# 
  1223  0001                     	;# 
  1224  0002                     	;# 
  1225  0003                     	;# 
  1226  0004                     	;# 
  1227  0005                     	;# 
  1228  0006                     	;# 
  1229  0007                     	;# 
  1230  0008                     	;# 
  1231  0009                     	;# 
  1232  000A                     	;# 
  1233  000B                     	;# 
  1234  000C                     	;# 
  1235  000D                     	;# 
  1236  000E                     	;# 
  1237  0011                     	;# 
  1238  0012                     	;# 
  1239  0013                     	;# 
  1240  0014                     	;# 
  1241  0015                     	;# 
  1242  0016                     	;# 
  1243  0016                     	;# 
  1244  0017                     	;# 
  1245  0018                     	;# 
  1246  0019                     	;# 
  1247  001A                     	;# 
  1248  001B                     	;# 
  1249  001C                     	;# 
  1250  001E                     	;# 
  1251  001F                     	;# 
  1252  008C                     	;# 
  1253  008D                     	;# 
  1254  008E                     	;# 
  1255  0091                     	;# 
  1256  0092                     	;# 
  1257  0093                     	;# 
  1258  0094                     	;# 
  1259  0095                     	;# 
  1260  0096                     	;# 
  1261  0097                     	;# 
  1262  0098                     	;# 
  1263  0099                     	;# 
  1264  009A                     	;# 
  1265  009B                     	;# 
  1266  009B                     	;# 
  1267  009C                     	;# 
  1268  009D                     	;# 
  1269  009E                     	;# 
  1270  010C                     	;# 
  1271  010D                     	;# 
  1272  010E                     	;# 
  1273  0111                     	;# 
  1274  0112                     	;# 
  1275  0113                     	;# 
  1276  0114                     	;# 
  1277  0115                     	;# 
  1278  0116                     	;# 
  1279  0117                     	;# 
  1280  0118                     	;# 
  1281  0119                     	;# 
  1282  011A                     	;# 
  1283  011B                     	;# 
  1284  011D                     	;# 
  1285  011E                     	;# 
  1286  018C                     	;# 
  1287  018D                     	;# 
  1288  018E                     	;# 
  1289  0191                     	;# 
  1290  0191                     	;# 
  1291  0192                     	;# 
  1292  0193                     	;# 
  1293  0193                     	;# 
  1294  0193                     	;# 
  1295  0194                     	;# 
  1296  0195                     	;# 
  1297  0196                     	;# 
  1298  0199                     	;# 
  1299  019A                     	;# 
  1300  019B                     	;# 
  1301  019B                     	;# 
  1302  019C                     	;# 
  1303  019D                     	;# 
  1304  019E                     	;# 
  1305  019F                     	;# 
  1306  020C                     	;# 
  1307  020D                     	;# 
  1308  020E                     	;# 
  1309  0211                     	;# 
  1310  0211                     	;# 
  1311  0212                     	;# 
  1312  0212                     	;# 
  1313  0213                     	;# 
  1314  0213                     	;# 
  1315  0214                     	;# 
  1316  0214                     	;# 
  1317  0215                     	;# 
  1318  0215                     	;# 
  1319  0215                     	;# 
  1320  0216                     	;# 
  1321  0216                     	;# 
  1322  0217                     	;# 
  1323  0217                     	;# 
  1324  0219                     	;# 
  1325  021A                     	;# 
  1326  021B                     	;# 
  1327  021C                     	;# 
  1328  021D                     	;# 
  1329  021E                     	;# 
  1330  021F                     	;# 
  1331  0291                     	;# 
  1332  0291                     	;# 
  1333  0292                     	;# 
  1334  0293                     	;# 
  1335  0294                     	;# 
  1336  0295                     	;# 
  1337  0295                     	;# 
  1338  0296                     	;# 
  1339  0298                     	;# 
  1340  0298                     	;# 
  1341  0299                     	;# 
  1342  029A                     	;# 
  1343  029B                     	;# 
  1344  029C                     	;# 
  1345  029D                     	;# 
  1346  029E                     	;# 
  1347  0311                     	;# 
  1348  0311                     	;# 
  1349  0312                     	;# 
  1350  0313                     	;# 
  1351  0318                     	;# 
  1352  0318                     	;# 
  1353  0319                     	;# 
  1354  031A                     	;# 
  1355  038C                     	;# 
  1356  038D                     	;# 
  1357  038E                     	;# 
  1358  0391                     	;# 
  1359  0392                     	;# 
  1360  0393                     	;# 
  1361  0394                     	;# 
  1362  0395                     	;# 
  1363  0396                     	;# 
  1364  039A                     	;# 
  1365  039C                     	;# 
  1366  039D                     	;# 
  1367  039E                     	;# 
  1368  039F                     	;# 
  1369  0415                     	;# 
  1370  0416                     	;# 
  1371  0417                     	;# 
  1372  041C                     	;# 
  1373  041D                     	;# 
  1374  041E                     	;# 
  1375  0FE4                     	;# 
  1376  0FE5                     	;# 
  1377  0FE6                     	;# 
  1378  0FE7                     	;# 
  1379  0FE8                     	;# 
  1380  0FE9                     	;# 
  1381  0FEA                     	;# 
  1382  0FEB                     	;# 
  1383  0FED                     	;# 
  1384  0FEE                     	;# 
  1385  0FEF                     	;_uartFifoBuff
  1386  005D                     _TMR0IE	set	93
  1387  005E                     _PEIE	set	94
  1388  005F                     _GIE	set	95
  1389  008D                     _RCIF	set	141
  1390  005A                     _TMR0IF	set	90
  1391  0095                     _OPTION_REG	set	149
  1392  008D                     _TRISB	set	141
  1393  008E                     _TRISCbits	set	142
  1394  008C                     _TRISA	set	140
  1395  0099                     _OSCCON	set	153
  1396  048D                     _RCIE	set	1165
  1397  010E                     _LATCbits	set	270
  1398  08EF                     _RXDTSEL	set	2287
  1399  08EA                     _TXCKSEL	set	2282
  1400  0199                     _RCREG	set	409
  1401  019A                     _TXREG	set	410
  1402  019C                     _SPBRGH	set	412
  1403  019B                     _SPBRGL	set	411
  1404  0CF1                     _TRMT	set	3313
  1405  0CEF                     _SPEN	set	3311
  1406  0CF4                     _SYNC	set	3316
  1407  0CEC                     _CREN	set	3308
  1408  0CF5                     _TXEN	set	3317
  1409  0CF2                     _BRGH	set	3314
  1410  0CFB                     _BRG16	set	3323
  1411                           
  1412                           	psect	stringtext1
  1413  020B                     __pstringtext1:	
  1414  020B                     STR_3:	
  1415  020B  3452               	retlw	82	;'R'
  1416  020C  3465               	retlw	101	;'e'
  1417  020D  3463               	retlw	99	;'c'
  1418  020E  3465               	retlw	101	;'e'
  1419  020F  3469               	retlw	105	;'i'
  1420  0210  3476               	retlw	118	;'v'
  1421  0211  3465               	retlw	101	;'e'
  1422  0212  3464               	retlw	100	;'d'
  1423  0213  3420               	retlw	32	;' '
  1424  0214  3453               	retlw	83	;'S'
  1425  0215  3474               	retlw	116	;'t'
  1426  0216  3472               	retlw	114	;'r'
  1427  0217  3469               	retlw	105	;'i'
  1428  0218  346E               	retlw	110	;'n'
  1429  0219  3467               	retlw	103	;'g'
  1430  021A  343A               	retlw	58	;':'
  1431  021B  3420               	retlw	32	;' '
  1432  021C  340A               	retlw	10
  1433  021D  3400               	retlw	0
  1434                           
  1435                           	psect	stringtext2
  1436  0230                     __pstringtext2:	
  1437  0230                     STR_6:	
  1438  0230  3446               	retlw	70	;'F'
  1439  0231  3469               	retlw	105	;'i'
  1440  0232  3466               	retlw	102	;'f'
  1441  0233  346F               	retlw	111	;'o'
  1442  0234  3420               	retlw	32	;' '
  1443  0235  3445               	retlw	69	;'E'
  1444  0236  346D               	retlw	109	;'m'
  1445  0237  3470               	retlw	112	;'p'
  1446  0238  3474               	retlw	116	;'t'
  1447  0239  3479               	retlw	121	;'y'
  1448  023A  3421               	retlw	33	;'!'
  1449  023B  3421               	retlw	33	;'!'
  1450  023C  3420               	retlw	32	;' '
  1451  023D  340A               	retlw	10
  1452  023E  3400               	retlw	0
  1453                           
  1454                           	psect	stringtext3
  1455  023F                     __pstringtext3:	
  1456  023F                     STR_5:	
  1457  023F  3446               	retlw	70	;'F'
  1458  0240  3469               	retlw	105	;'i'
  1459  0241  3466               	retlw	102	;'f'
  1460  0242  346F               	retlw	111	;'o'
  1461  0243  3420               	retlw	32	;' '
  1462  0244  3446               	retlw	70	;'F'
  1463  0245  3475               	retlw	117	;'u'
  1464  0246  346C               	retlw	108	;'l'
  1465  0247  346C               	retlw	108	;'l'
  1466  0248  3421               	retlw	33	;'!'
  1467  0249  3421               	retlw	33	;'!'
  1468  024A  3420               	retlw	32	;' '
  1469  024B  340A               	retlw	10
  1470  024C  3400               	retlw	0
  1471                           
  1472                           	psect	stringtext4
  1473  0259                     __pstringtext4:	
  1474  0259                     STR_1:	
  1475  0259  344C               	retlw	76	;'L'
  1476  025A  3445               	retlw	69	;'E'
  1477  025B  3444               	retlw	68	;'D'
  1478  025C  3420               	retlw	32	;' '
  1479  025D  344F               	retlw	79	;'O'
  1480  025E  3446               	retlw	70	;'F'
  1481  025F  3446               	retlw	70	;'F'
  1482  0260  340A               	retlw	10
  1483  0261  3400               	retlw	0
  1484                           
  1485                           	psect	stringtext5
  1486  0274                     __pstringtext5:	
  1487  0274                     STR_2:	
  1488  0274  344C               	retlw	76	;'L'
  1489  0275  3445               	retlw	69	;'E'
  1490  0276  3444               	retlw	68	;'D'
  1491  0277  3420               	retlw	32	;' '
  1492  0278  344F               	retlw	79	;'O'
  1493  0279  344E               	retlw	78	;'N'
  1494  027A  340A               	retlw	10
  1495  027B  3400               	retlw	0
  1496                           
  1497                           	psect	stringtext6
  1498  0000                     __pstringtext6:	
  1499  024B                     
  1500                           ; #config settings
  1501  0000                     
  1502                           	psect	cinit
  1503  0030                     start_initialization:	
  1504  0030                     __initialization:		;BIGRAM
  1505                           
  1506                           ; Clear objects allocated to BIGRAM
  1507  0030  30F0               	movlw	low (0+8944)
  1508  0031  0084               	movwf	4
  1509  0032  3022               	movlw	high (0+8944)
  1510  0033  0085               	movwf	5
  1511  0034  3000               	movlw	0
  1512  0035  00FE               	movwf	btemp
  1513  0036  3001               	movlw	1
  1514  0037  00FF               	movwf	btemp+1
  1515  0038  3182  224D  3180   	fcall	clear_ram0
  1516                           
  1517                           ; Clear objects allocated to COMMON
  1518  003B  01F6               	clrf	__pbssCOMMON& (0+127)
  1519  003C  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1520  003D  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1521  003E  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1522                           
  1523                           ; Clear objects allocated to BANK0
  1524  003F  3046               	movlw	low __pbssBANK0
  1525  0040  0084               	movwf	4
  1526  0041  3000               	movlw	high __pbssBANK0
  1527  0042  0085               	movwf	5
  1528  0043  3014               	movlw	20
  1529  0044  00FE               	movwf	btemp
  1530  0045  3000               	movlw	0
  1531  0046  00FF               	movwf	btemp+1
  1532  0047  3182  224D  3180   	fcall	clear_ram0
  1533                           
  1534                           ; Clear objects allocated to BANK1
  1535  004A  30A0               	movlw	low __pbssBANK1
  1536  004B  0084               	movwf	4
  1537  004C  3000               	movlw	high __pbssBANK1
  1538  004D  0085               	movwf	5
  1539  004E  3020               	movlw	32
  1540  004F  00FE               	movwf	btemp
  1541  0050  3000               	movlw	0
  1542  0051  00FF               	movwf	btemp+1
  1543  0052  3182  224D         	fcall	clear_ram0
  1544  0054                     end_of_initialization:	
  1545                           ;End of C runtime variable initialization code
  1546                           
  1547  0054                     __end_of__initialization:	
  1548  0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1549  0055  0020               	movlb	0
  1550  0056  3181  29C8         	ljmp	_main	;jump to C main() function
  1551                           
  1552                           	psect	bssCOMMON
  1553  0076                     __pbssCOMMON:	
  1554  0076                     _milliSec:	
  1555  0076                     	ds	4
  1556                           
  1557                           	psect	bssBANK0
  1558  0046                     __pbssBANK0:	
  1559  0046                     _ledData:	
  1560  0046                     	ds	9
  1561  004F                     _sec:	
  1562  004F                     	ds	4
  1563  0053                     _secCounter:	
  1564  0053                     	ds	2
  1565  0055                     _fifoTail:	
  1566  0055                     	ds	1
  1567  0056                     _fifoHead:	
  1568  0056                     	ds	1
  1569  0057                     _uartRX:	
  1570  0057                     	ds	1
  1571  0058                     _fullWordReceived:	
  1572  0058                     	ds	1
  1573  0059                     _uData:	
  1574  0059                     	ds	1
  1575                           
  1576                           	psect	bssBANK1
  1577  00A0                     __pbssBANK1:	
  1578  00A0                     UARTprocess@F3113:	
  1579  00A0                     	ds	32
  1580                           
  1581                           	psect	clrtext
  1582  024D                     clear_ram0:	
  1583                           ;	Called with FSR0 containing the base address, and
  1584                           ;	btemp/btemp+1 has the size to clear
  1585                           
  1586  024D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1587  024E                     clrloop0:	
  1588  024E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1589  024F  3101               	addfsr 0,1
  1590  0250  3001               	movlw	1
  1591  0251  02FE               	subwf	126,f
  1592  0252  3000               	movlw	0
  1593  0253  3BFF               	subwfb	127,f
  1594  0254  087F               	movf	127,w
  1595  0255  047E               	iorwf	126,w
  1596  0256  1903               	btfsc	3,2
  1597  0257  3400               	retlw	0	;all done for this memory range, return
  1598  0258  2A4E               	goto	clrloop0	;have we reached the end yet?
  1599                           
  1600                           	psect	cstackCOMMON
  1601  0070                     __pcstackCOMMON:	
  1602  0070                     ?_oscillatorInit:	
  1603  0070                     ?_portInit:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606  0070                     ?_InterruptInit:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609  0070                     ?_Timer0Init:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612  0070                     ?_LEDinit:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615  0070                     ?_UARTinit:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618  0070                     ?_LEDProcess:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621  0070                     ?_UARTprocess:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624  0070                     ?_fifoWrite:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627  0070                     ??_fifoWrite:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630  0070                     ?_checkUartEmpty:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633  0070                     ?_fifoPurge:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636  0070                     ?_checkUartFull:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639  0070                     ??_checkUartFull:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642  0070                     ?_timer0Interrupt:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645  0070                     ?_main:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648                           
  1649                           ; 2 bytes @ 0x0
  1650  0070                     	ds	1
  1651  0071                     ?_fifoRead:	
  1652                           
  1653                           ; 2 bytes @ 0x1
  1654  0071                     	ds	1
  1655  0072                     fifoWrite@letter:	
  1656                           
  1657                           ; 1 bytes @ 0x2
  1658  0072                     	ds	1
  1659  0073                     ??_oscillatorInit:	
  1660  0073                     ??_portInit:	
  1661                           ; 1 bytes @ 0x3
  1662                           
  1663  0073                     ??_InterruptInit:	
  1664                           ; 1 bytes @ 0x3
  1665                           
  1666  0073                     ??_Timer0Init:	
  1667                           ; 1 bytes @ 0x3
  1668                           
  1669  0073                     ??_LEDinit:	
  1670                           ; 1 bytes @ 0x3
  1671                           
  1672  0073                     ??_UARTinit:	
  1673                           ; 1 bytes @ 0x3
  1674                           
  1675  0073                     ?_UARTTx:	
  1676                           ; 1 bytes @ 0x3
  1677                           
  1678  0073                     ??_fifoRead:	
  1679                           ; 1 bytes @ 0x3
  1680                           
  1681  0073                     ??_checkUartEmpty:	
  1682                           ; 1 bytes @ 0x3
  1683                           
  1684  0073                     ??_fifoPurge:	
  1685                           ; 1 bytes @ 0x3
  1686                           
  1687  0073                     ??_timer0Interrupt:	
  1688                           ; 1 bytes @ 0x3
  1689                           
  1690  0073                     UARTTx@sendString:	
  1691                           ; 1 bytes @ 0x3
  1692                           
  1693                           
  1694                           ; 2 bytes @ 0x3
  1695  0073                     	ds	2
  1696  0075                     ??_UARTTx:	
  1697  0075                     fifoRead@returnIndex:	
  1698                           ; 1 bytes @ 0x5
  1699                           
  1700                           
  1701                           ; 1 bytes @ 0x5
  1702  0075                     	ds	1
  1703  0076                     ??_main:	
  1704                           
  1705                           	psect	cstackBANK0
  1706  0020                     __pcstackBANK0:	
  1707                           ; 1 bytes @ 0x6
  1708                           
  1709  0020                     ??_LEDProcess:	
  1710  0020                     ??_UARTprocess:	
  1711                           ; 1 bytes @ 0x0
  1712                           
  1713                           
  1714                           ; 1 bytes @ 0x0
  1715  0020                     	ds	2
  1716  0022                     UARTprocess@receivedString:	
  1717                           
  1718                           ; 32 bytes @ 0x2
  1719  0022                     	ds	33
  1720  0043                     UARTprocess@i:	
  1721                           
  1722                           ; 1 bytes @ 0x23
  1723  0043                     	ds	1
  1724  0044                     UARTprocess@receivePtr:	
  1725                           
  1726                           ; 2 bytes @ 0x24
  1727  0044                     	ds	2
  1728                           
  1729                           	psect	maintext
  1730  01C8                     __pmaintext:	
  1731 ;;
  1732 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1733 ;;
  1734 ;; *************** function _main *****************
  1735 ;; Defined at:
  1736 ;;		line 33 in file "main.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;		None
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;		None
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  2   26[None  ] int 
  1743 ;; Registers used:
  1744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : B1F/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1754 ;;Total ram usage:        0 bytes
  1755 ;; Hardware stack levels required when called:    6
  1756 ;; This function calls:
  1757 ;;		_InterruptInit
  1758 ;;		_LEDProcess
  1759 ;;		_LEDinit
  1760 ;;		_Timer0Init
  1761 ;;		_UARTinit
  1762 ;;		_UARTprocess
  1763 ;;		_oscillatorInit
  1764 ;;		_portInit
  1765 ;; This function is called by:
  1766 ;;		Startup code after reset
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           
  1771                           ;psect for function _main
  1772  01C8                     _main:	
  1773                           
  1774                           ;main.c: 35:     oscillatorInit();
  1775                           
  1776                           ;incstack = 0
  1777                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1778  01C8  3182  2288  3181   	fcall	_oscillatorInit
  1779                           
  1780                           ;main.c: 36:     portInit();
  1781  01CB  3182  227C  3181   	fcall	_portInit
  1782                           
  1783                           ;main.c: 37:     InterruptInit();
  1784  01CE  3182  2282  3181   	fcall	_InterruptInit
  1785                           
  1786                           ;main.c: 38:     Timer0Init();
  1787  01D1  3182  2290  3181   	fcall	_Timer0Init
  1788                           
  1789                           ;main.c: 39:     LEDinit();
  1790  01D4  3181  21E1  3181   	fcall	_LEDinit
  1791                           
  1792                           ;main.c: 40:     UARTinit();
  1793  01D7  3182  221E  3181   	fcall	_UARTinit
  1794  01DA                     l1469:	
  1795                           
  1796                           ;main.c: 42:     {;main.c: 43:         LEDProcess();
  1797  01DA  3180  2058  3181   	fcall	_LEDProcess
  1798                           
  1799                           ;main.c: 44:         UARTprocess();
  1800  01DD  3180  20E8  3181   	fcall	_UARTprocess
  1801  01E0  29DA               	goto	l1469
  1802  01E1                     __end_of_main:	
  1803                           
  1804                           	psect	text1
  1805  027C                     __ptext1:	
  1806 ;; *************** function _portInit *****************
  1807 ;; Defined at:
  1808 ;;		line 4 in file "PortInit.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		status,2
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1826 ;;Total ram usage:        0 bytes
  1827 ;; Hardware stack levels used:    1
  1828 ;; Hardware stack levels required when called:    3
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_main
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           
  1837                           ;psect for function _portInit
  1838  027C                     _portInit:	
  1839                           
  1840                           ;PortInit.c: 6:     TRISA = 0x00;
  1841                           
  1842                           ;incstack = 0
  1843                           ; Regs used in _portInit: [status,2]
  1844  027C  0021               	movlb	1	; select bank1
  1845  027D  018C               	clrf	12	;volatile
  1846                           
  1847                           ;PortInit.c: 7:     TRISCbits.TRISC2 = 0;
  1848  027E  110E               	bcf	14,2	;volatile
  1849                           
  1850                           ;PortInit.c: 8:     TRISCbits.TRISC4 = 0;
  1851  027F  120E               	bcf	14,4	;volatile
  1852                           
  1853                           ;PortInit.c: 9:     TRISB = 0x00;
  1854  0280  018D               	clrf	13	;volatile
  1855  0281  0008               	return
  1856  0282                     __end_of_portInit:	
  1857                           
  1858                           	psect	text2
  1859  0288                     __ptext2:	
  1860 ;; *************** function _oscillatorInit *****************
  1861 ;; Defined at:
  1862 ;;		line 4 in file "oscillatorInit.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1880 ;;Total ram usage:        0 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    3
  1883 ;; This function calls:
  1884 ;;		Nothing
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           
  1891                           ;psect for function _oscillatorInit
  1892  0288                     _oscillatorInit:	
  1893                           
  1894                           ;oscillatorInit.c: 6:     OSCCON = 0x72;
  1895                           
  1896                           ;incstack = 0
  1897                           ; Regs used in _oscillatorInit: [wreg]
  1898  0288  3072               	movlw	114
  1899  0289  0021               	movlb	1	; select bank1
  1900  028A  0099               	movwf	25	;volatile
  1901  028B  0008               	return
  1902  028C                     __end_of_oscillatorInit:	
  1903                           
  1904                           	psect	text3
  1905  00E8                     __ptext3:	
  1906 ;; *************** function _UARTprocess *****************
  1907 ;; Defined at:
  1908 ;;		line 29 in file "UART.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;		None
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  receivedStri   32    2[BANK0 ] unsigned char [32]
  1913 ;;  receivePtr      2   36[BANK0 ] PTR unsigned char 
  1914 ;;		 -> uartFifoBuff(256), NULL(0), 
  1915 ;;  i               1   35[BANK0 ] unsigned char 
  1916 ;;  actionStatus    1    0        unsigned char 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  1    wreg      void 
  1919 ;; Registers used:
  1920 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1927 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1928 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1929 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1930 ;;Total ram usage:       38 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; Hardware stack levels required when called:    5
  1933 ;; This function calls:
  1934 ;;		_UARTTx
  1935 ;;		_checkUartEmpty
  1936 ;;		_fifoPurge
  1937 ;;		_fifoRead
  1938 ;; This function is called by:
  1939 ;;		_main
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           
  1944                           ;psect for function _UARTprocess
  1945  00E8                     _UARTprocess:	
  1946                           
  1947                           ;incstack = 0
  1948                           ; Regs used in _UARTprocess: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1949  00E8  0020               	movlb	0	; select bank0
  1950  00E9  01C3               	clrf	UARTprocess@i
  1951                           
  1952                           ;UART.c: 32:     char receivedString[32] = {0};
  1953  00EA  3022               	movlw	low UARTprocess@receivedString
  1954  00EB  0086               	movwf	6
  1955  00EC  3000               	movlw	high UARTprocess@receivedString
  1956  00ED  0087               	movwf	7
  1957  00EE  3020               	movlw	32
  1958  00EF  00A0               	movwf	??_UARTprocess
  1959  00F0  3000               	movlw	0
  1960  00F1                     u450:	
  1961  00F1  001E               	movwi fsr1++
  1962  00F2  0BA0               	decfsz	??_UARTprocess,f
  1963  00F3  28F1               	goto	u450
  1964                           
  1965                           ;UART.c: 33:     char *receivePtr;;UART.c: 34:     switch (uData.currentState)
  1966  00F4  2957               	goto	l1457
  1967  00F5                     l1427:	
  1968                           
  1969                           ;UART.c: 37:             if (uartRX)
  1970  00F5  0857               	movf	_uartRX,w	;volatile
  1971  00F6  1903               	btfsc	3,2
  1972  00F7  0008               	return
  1973                           
  1974                           ;UART.c: 38:             {;UART.c: 39:                 uData.currentState = UART_PUSH;
  1975  00F8  01D9               	clrf	_uData
  1976  00F9  0AD9               	incf	_uData,f
  1977  00FA  0008               	return
  1978  00FB                     l1431:	
  1979                           
  1980                           ;UART.c: 50:             receivePtr = fifoRead();
  1981  00FB  3181  21AA  3180   	fcall	_fifoRead
  1982  00FE  0872               	movf	?_fifoRead+1,w
  1983  00FF  0020               	movlb	0	; select bank0
  1984  0100  00C5               	movwf	UARTprocess@receivePtr+1
  1985  0101  0871               	movf	?_fifoRead,w
  1986  0102  00C4               	movwf	UARTprocess@receivePtr
  1987  0103                     l1439:	
  1988                           ;UART.c: 51:             while (receivePtr)
  1989                           
  1990                           
  1991                           ;UART.c: 51:             while (receivePtr)
  1992  0103  0844               	movf	UARTprocess@receivePtr,w
  1993  0104  0445               	iorwf	UARTprocess@receivePtr+1,w
  1994  0105  1903               	btfsc	3,2
  1995  0106  2920               	goto	l1441
  1996                           
  1997                           ;UART.c: 52:             {;UART.c: 53:                 receivedString[i] = *receivePtr;
  1998  0107  0844               	movf	UARTprocess@receivePtr,w
  1999  0108  0086               	movwf	6
  2000  0109  0845               	movf	UARTprocess@receivePtr+1,w
  2001  010A  0087               	movwf	7
  2002  010B  0801               	movf	1,w
  2003  010C  00A0               	movwf	??_UARTprocess
  2004  010D  0843               	movf	UARTprocess@i,w
  2005  010E  3E22               	addlw	(low (UARTprocess@receivedString| 0))& (0+255)
  2006  010F  0086               	movwf	6
  2007  0110  0187               	clrf	7
  2008  0111  0820               	movf	??_UARTprocess,w
  2009  0112  0081               	movwf	1
  2010                           
  2011                           ;UART.c: 54:                 receivePtr = fifoRead();
  2012  0113  3181  21AA  3180   	fcall	_fifoRead
  2013  0116  0872               	movf	?_fifoRead+1,w
  2014  0117  0020               	movlb	0	; select bank0
  2015  0118  00C5               	movwf	UARTprocess@receivePtr+1
  2016  0119  0871               	movf	?_fifoRead,w
  2017  011A  00C4               	movwf	UARTprocess@receivePtr
  2018                           
  2019                           ;UART.c: 55:                 i++;
  2020  011B  3001               	movlw	1
  2021  011C  00A0               	movwf	??_UARTprocess
  2022  011D  0820               	movf	??_UARTprocess,w
  2023  011E  07C3               	addwf	UARTprocess@i,f
  2024  011F  2903               	goto	l1439
  2025  0120                     l1441:	
  2026                           
  2027                           ;UART.c: 57:             UARTTx("Received String: \n");
  2028  0120  300B               	movlw	low (STR_3| (0+32768))
  2029  0121  00F3               	movwf	UARTTx@sendString
  2030  0122  3082               	movlw	high (STR_3| (0+32768))
  2031  0123  00F4               	movwf	UARTTx@sendString+1
  2032  0124  3181  21F6  3180   	fcall	_UARTTx
  2033                           
  2034                           ;UART.c: 58:             UARTTx(receivedString);
  2035  0127  3022               	movlw	low UARTprocess@receivedString
  2036  0128  00F3               	movwf	UARTTx@sendString
  2037  0129  3000               	movlw	high UARTprocess@receivedString
  2038  012A  00F4               	movwf	UARTTx@sendString+1
  2039  012B  3181  21F6  3180   	fcall	_UARTTx
  2040                           
  2041                           ;UART.c: 59:             UARTTx("\n");
  2042  012E  304B               	movlw	low ((STR_5+12)| (0+32768))
  2043  012F  00F3               	movwf	UARTTx@sendString
  2044  0130  3082               	movlw	high ((STR_5+12)| (0+32768))
  2045  0131  00F4               	movwf	UARTTx@sendString+1
  2046  0132  3181  21F6  3180   	fcall	_UARTTx
  2047                           
  2048                           ;UART.c: 60:             if (!checkUartEmpty())
  2049  0135  3182  2262  3180   	fcall	_checkUartEmpty
  2050  0138  3A00               	xorlw	0
  2051  0139  1D03               	skipz
  2052  013A  2941               	goto	l1447
  2053                           
  2054                           ;UART.c: 61:             {;UART.c: 62:                 uData.currentState = UART_READ;
  2055  013B  3002               	movlw	2
  2056  013C  0020               	movlb	0	; select bank0
  2057  013D  00A0               	movwf	??_UARTprocess
  2058  013E  0820               	movf	??_UARTprocess,w
  2059  013F  00D9               	movwf	_uData
  2060                           
  2061                           ;UART.c: 63:             }
  2062  0140  0008               	return
  2063  0141                     l1447:	
  2064                           
  2065                           ;UART.c: 65:             {;UART.c: 66:                 uData.currentState = UART_IDLE;
  2066  0141  0020               	movlb	0	; select bank0
  2067  0142  01D9               	clrf	_uData
  2068  0143  0008               	return
  2069  0144                     l1449:	
  2070                           
  2071                           ;UART.c: 70:             fifoPurge();
  2072  0144  3182  228C  3180   	fcall	_fifoPurge
  2073                           
  2074                           ;UART.c: 71:             uData.currentState = UART_IDLE;
  2075  0147  0020               	movlb	0	; select bank0
  2076  0148  01D9               	clrf	_uData
  2077                           
  2078                           ;UART.c: 72:             UARTTx("Fifo Full!! \n");
  2079  0149  303F               	movlw	low (STR_5| (0+32768))
  2080  014A  00F3               	movwf	UARTTx@sendString
  2081  014B  3082               	movlw	high (STR_5| (0+32768))
  2082  014C  00F4               	movwf	UARTTx@sendString+1
  2083  014D  3181  21F6         	fcall	_UARTTx
  2084                           
  2085                           ;UART.c: 73:             break;
  2086  014F  0008               	return
  2087  0150                     l1455:	
  2088                           
  2089                           ;UART.c: 75:             UARTTx("Fifo Empty!! \n");
  2090  0150  3030               	movlw	low (STR_6| (0+32768))
  2091  0151  00F3               	movwf	UARTTx@sendString
  2092  0152  3082               	movlw	high (STR_6| (0+32768))
  2093  0153  00F4               	movwf	UARTTx@sendString+1
  2094  0154  3181  21F6         	fcall	_UARTTx
  2095                           
  2096                           ;UART.c: 76:     }
  2097  0156  0008               	return
  2098  0157                     l1457:	
  2099  0157  0859               	movf	_uData,w
  2100  0158  00A0               	movwf	??_UARTprocess
  2101  0159  01A1               	clrf	??_UARTprocess+1
  2102                           
  2103                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2104                           ; Switch size 1, requested type "simple"
  2105                           ; Number of cases is 1, Range of values is 0 to 0
  2106                           ; switch strategies available:
  2107                           ; Name         Instructions Cycles
  2108                           ; simple_byte            4     3 (average)
  2109                           ; direct_byte            8     6 (fixed)
  2110                           ; jumptable            260     6 (fixed)
  2111                           ;	Chosen strategy is simple_byte
  2112  015A  0821               	movf	??_UARTprocess+1,w
  2113  015B  3A00               	xorlw	0	; case 0
  2114  015C  1903               	skipnz
  2115  015D  295F               	goto	l1513
  2116  015E  2970               	goto	l184
  2117  015F                     l1513:	
  2118                           
  2119                           ; Switch size 1, requested type "simple"
  2120                           ; Number of cases is 5, Range of values is 0 to 4
  2121                           ; switch strategies available:
  2122                           ; Name         Instructions Cycles
  2123                           ; direct_byte           16     6 (fixed)
  2124                           ; simple_byte           16     9 (average)
  2125                           ; jumptable            260     6 (fixed)
  2126                           ;	Chosen strategy is simple_byte
  2127  015F  0820               	movf	??_UARTprocess,w
  2128  0160  3A00               	xorlw	0	; case 0
  2129  0161  1903               	skipnz
  2130  0162  28F5               	goto	l1427
  2131  0163  3A01               	xorlw	1	; case 1
  2132  0164  1903               	skipnz
  2133  0165  2970               	goto	l184
  2134  0166  3A03               	xorlw	3	; case 2
  2135  0167  1903               	skipnz
  2136  0168  28FB               	goto	l1431
  2137  0169  3A01               	xorlw	1	; case 3
  2138  016A  1903               	skipnz
  2139  016B  2944               	goto	l1449
  2140  016C  3A07               	xorlw	7	; case 4
  2141  016D  1903               	skipnz
  2142  016E  2950               	goto	l1455
  2143  016F  2970               	goto	l184
  2144  0170                     l184:	
  2145  0170  0008               	return
  2146  0171                     __end_of_UARTprocess:	
  2147                           
  2148                           	psect	text4
  2149  01AA                     __ptext4:	
  2150 ;; *************** function _fifoRead *****************
  2151 ;; Defined at:
  2152 ;;		line 114 in file "UART.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;		None
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  returnIndex     1    5[COMMON] unsigned char 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  2    1[COMMON] PTR unsigned char 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0, pclath, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2167 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2168 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2169 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2170 ;;Total ram usage:        3 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    4
  2173 ;; This function calls:
  2174 ;;		_checkUartEmpty
  2175 ;; This function is called by:
  2176 ;;		_UARTprocess
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           
  2181                           ;psect for function _fifoRead
  2182  01AA                     _fifoRead:	
  2183                           
  2184                           ;UART.c: 116:     uint8_t returnIndex;;UART.c: 117:     if (checkUartEmpty())
  2185                           
  2186                           ;incstack = 0
  2187                           ; Regs used in _fifoRead: [wreg+status,2+status,0+pclath+cstack]
  2188  01AA  3182  2262  3181   	fcall	_checkUartEmpty
  2189  01AD  3A00               	xorlw	0
  2190  01AE  1903               	skipnz
  2191  01AF  29B3               	goto	l1149
  2192                           
  2193                           ;UART.c: 118:     {;UART.c: 119:         return ((void*)0);
  2194  01B0  01F1               	clrf	?_fifoRead
  2195  01B1  01F2               	clrf	?_fifoRead+1
  2196  01B2  0008               	return
  2197  01B3                     l1149:	
  2198                           
  2199                           ;UART.c: 122:     {;UART.c: 123:         returnIndex = fifoTail;
  2200  01B3  0020               	movlb	0	; select bank0
  2201  01B4  0855               	movf	_fifoTail,w
  2202  01B5  00F3               	movwf	??_fifoRead
  2203  01B6  0873               	movf	??_fifoRead,w
  2204  01B7  00F5               	movwf	fifoRead@returnIndex
  2205                           
  2206                           ;UART.c: 124:         fifoTail = (fifoTail + 1) % 256;
  2207  01B8  0855               	movf	_fifoTail,w
  2208  01B9  3E01               	addlw	1
  2209  01BA  00F3               	movwf	??_fifoRead
  2210  01BB  0873               	movf	??_fifoRead,w
  2211  01BC  00D5               	movwf	_fifoTail
  2212                           
  2213                           ;UART.c: 125:         return (&uartFifoBuff[returnIndex]);
  2214  01BD  0875               	movf	fifoRead@returnIndex,w
  2215  01BE  3EF0               	addlw	240
  2216  01BF  00F3               	movwf	??_fifoRead
  2217  01C0  01F4               	clrf	??_fifoRead+1
  2218  01C1  3022               	movlw	34
  2219  01C2  3DF4               	addwfc	??_fifoRead+1,f
  2220  01C3  0873               	movf	??_fifoRead,w
  2221  01C4  00F1               	movwf	?_fifoRead
  2222  01C5  0874               	movf	??_fifoRead+1,w
  2223  01C6  00F2               	movwf	?_fifoRead+1
  2224  01C7  0008               	return
  2225  01C8                     __end_of_fifoRead:	
  2226                           
  2227                           	psect	text5
  2228  0262                     __ptext5:	
  2229 ;; *************** function _checkUartEmpty *****************
  2230 ;; Defined at:
  2231 ;;		line 141 in file "UART.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;		None
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;		None
  2236 ;; Return value:  Size  Location     Type
  2237 ;;                  1    wreg      unsigned char 
  2238 ;; Registers used:
  2239 ;;		wreg
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/0
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2249 ;;Total ram usage:        0 bytes
  2250 ;; Hardware stack levels used:    1
  2251 ;; Hardware stack levels required when called:    3
  2252 ;; This function calls:
  2253 ;;		Nothing
  2254 ;; This function is called by:
  2255 ;;		_UARTprocess
  2256 ;;		_fifoRead
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           
  2261                           ;psect for function _checkUartEmpty
  2262  0262                     _checkUartEmpty:	
  2263                           
  2264                           ;UART.c: 143:     if (fifoHead == fifoTail)
  2265                           
  2266                           ;incstack = 0
  2267                           ; Regs used in _checkUartEmpty: [wreg]
  2268  0262  0020               	movlb	0	; select bank0
  2269  0263  0856               	movf	_fifoHead,w
  2270  0264  0655               	xorwf	_fifoTail,w
  2271  0265  1D03               	skipz
  2272  0266  2A69               	goto	l1129
  2273                           
  2274                           ;UART.c: 144:     {;UART.c: 145:         return 1;
  2275  0267  3001               	movlw	1
  2276  0268  0008               	return
  2277  0269                     l1129:	
  2278                           
  2279                           ;UART.c: 148:     {;UART.c: 149:         return 0;
  2280  0269  3000               	movlw	0
  2281  026A  0008               	return
  2282  026B                     __end_of_checkUartEmpty:	
  2283                           
  2284                           	psect	text6
  2285  028C                     __ptext6:	
  2286 ;; *************** function _fifoPurge *****************
  2287 ;; Defined at:
  2288 ;;		line 153 in file "UART.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		status,2
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2306 ;;Total ram usage:        0 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:    3
  2309 ;; This function calls:
  2310 ;;		Nothing
  2311 ;; This function is called by:
  2312 ;;		_UARTprocess
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           
  2317                           ;psect for function _fifoPurge
  2318  028C                     _fifoPurge:	
  2319                           
  2320                           ;UART.c: 155:     fifoHead = 0;
  2321                           
  2322                           ;incstack = 0
  2323                           ; Regs used in _fifoPurge: [status,2]
  2324  028C  0020               	movlb	0	; select bank0
  2325  028D  01D6               	clrf	_fifoHead
  2326                           
  2327                           ;UART.c: 156:     fifoTail = 0;
  2328  028E  01D5               	clrf	_fifoTail
  2329  028F  0008               	return
  2330  0290                     __end_of_fifoPurge:	
  2331                           
  2332                           	psect	text7
  2333  021E                     __ptext7:	
  2334 ;; *************** function _UARTinit *****************
  2335 ;; Defined at:
  2336 ;;		line 10 in file "UART.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;		None
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;		None
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  1    wreg      void 
  2343 ;; Registers used:
  2344 ;;		wreg, status,2
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2354 ;;Total ram usage:        0 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; Hardware stack levels required when called:    3
  2357 ;; This function calls:
  2358 ;;		Nothing
  2359 ;; This function is called by:
  2360 ;;		_main
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           
  2365                           ;psect for function _UARTinit
  2366  021E                     _UARTinit:	
  2367                           
  2368                           ;UART.c: 12:     TXCKSEL = 1;
  2369                           
  2370                           ;incstack = 0
  2371                           ; Regs used in _UARTinit: [wreg+status,2]
  2372  021E  0022               	movlb	2	; select bank2
  2373  021F  151D               	bsf	29,2	;volatile
  2374                           
  2375                           ;UART.c: 13:     RXDTSEL = 1;
  2376  0220  179D               	bsf	29,7	;volatile
  2377                           
  2378                           ;UART.c: 14:     BRG16 = 1;
  2379  0221  0023               	movlb	3	; select bank3
  2380  0222  159F               	bsf	31,3	;volatile
  2381                           
  2382                           ;UART.c: 15:     SPBRGL = 0x10;
  2383  0223  3010               	movlw	16
  2384  0224  009B               	movwf	27	;volatile
  2385                           
  2386                           ;UART.c: 16:     SPBRGH = 0x00;
  2387  0225  019C               	clrf	28	;volatile
  2388                           
  2389                           ;UART.c: 18:     BRGH = 1;
  2390  0226  151E               	bsf	30,2	;volatile
  2391                           
  2392                           ;UART.c: 19:     TXEN = 1;
  2393  0227  169E               	bsf	30,5	;volatile
  2394                           
  2395                           ;UART.c: 20:     CREN = 1;
  2396  0228  161D               	bsf	29,4	;volatile
  2397                           
  2398                           ;UART.c: 21:     SYNC = 0;
  2399  0229  121E               	bcf	30,4	;volatile
  2400                           
  2401                           ;UART.c: 22:     SPEN = 1;
  2402  022A  179D               	bsf	29,7	;volatile
  2403                           
  2404                           ;UART.c: 24:     fifoHead = 0;
  2405  022B  0020               	movlb	0	; select bank0
  2406  022C  01D6               	clrf	_fifoHead
  2407                           
  2408                           ;UART.c: 25:     fifoTail = 0;
  2409  022D  01D5               	clrf	_fifoTail
  2410                           
  2411                           ;UART.c: 26:     uData.currentState = UART_IDLE;
  2412  022E  01D9               	clrf	_uData
  2413  022F  0008               	return
  2414  0230                     __end_of_UARTinit:	
  2415                           
  2416                           	psect	text8
  2417  0290                     __ptext8:	
  2418 ;; *************** function _Timer0Init *****************
  2419 ;; Defined at:
  2420 ;;		line 4 in file "Timer.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;		None
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;		None
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2438 ;;Total ram usage:        0 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:    3
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_main
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           
  2449                           ;psect for function _Timer0Init
  2450  0290                     _Timer0Init:	
  2451                           
  2452                           ;Timer.c: 6:     OPTION_REG = 0x42;
  2453                           
  2454                           ;incstack = 0
  2455                           ; Regs used in _Timer0Init: [wreg]
  2456  0290  3042               	movlw	66
  2457  0291  0021               	movlb	1	; select bank1
  2458  0292  0095               	movwf	21	;volatile
  2459  0293  0008               	return
  2460  0294                     __end_of_Timer0Init:	
  2461                           
  2462                           	psect	text9
  2463  01E1                     __ptext9:	
  2464 ;; *************** function _LEDinit *****************
  2465 ;; Defined at:
  2466 ;;		line 52 in file "LEDApplication.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2484 ;;Total ram usage:        0 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    3
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_main
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           
  2495                           ;psect for function _LEDinit
  2496  01E1                     _LEDinit:	
  2497                           
  2498                           ;LEDApplication.c: 54:     LATCbits.LATC2 = 1;
  2499                           
  2500                           ;incstack = 0
  2501                           ; Regs used in _LEDinit: [wreg+status,2]
  2502  01E1  0022               	movlb	2	; select bank2
  2503  01E2  150E               	bsf	14,2	;volatile
  2504                           
  2505                           ;LEDApplication.c: 55:     ledData.LEDCurrentState = LED_ON;
  2506  01E3  0020               	movlb	0	; select bank0
  2507  01E4  01C6               	clrf	_ledData
  2508                           
  2509                           ;LEDApplication.c: 56:     ledData.LEDOnTime = 0;
  2510  01E5  3000               	movlw	0
  2511  01E6  00CA               	movwf	_ledData+4
  2512  01E7  3000               	movlw	0
  2513  01E8  00C9               	movwf	_ledData+3
  2514  01E9  3000               	movlw	0
  2515  01EA  00C8               	movwf	_ledData+2
  2516  01EB  3000               	movlw	0
  2517  01EC  00C7               	movwf	_ledData+1
  2518                           
  2519                           ;LEDApplication.c: 57:     ledData.LEDOffTime = 0;
  2520  01ED  3000               	movlw	0
  2521  01EE  00CE               	movwf	_ledData+8
  2522  01EF  3000               	movlw	0
  2523  01F0  00CD               	movwf	_ledData+7
  2524  01F1  3000               	movlw	0
  2525  01F2  00CC               	movwf	_ledData+6
  2526  01F3  3000               	movlw	0
  2527  01F4  00CB               	movwf	_ledData+5
  2528  01F5  0008               	return
  2529  01F6                     __end_of_LEDinit:	
  2530                           
  2531                           	psect	text10
  2532  0058                     __ptext10:	
  2533 ;; *************** function _LEDProcess *****************
  2534 ;; Defined at:
  2535 ;;		line 6 in file "LEDApplication.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;		None
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;		None
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      void 
  2542 ;; Registers used:
  2543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2551 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2552 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2553 ;;Total ram usage:        4 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; Hardware stack levels required when called:    4
  2556 ;; This function calls:
  2557 ;;		_UARTTx
  2558 ;; This function is called by:
  2559 ;;		_main
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           
  2564                           ;psect for function _LEDProcess
  2565  0058                     _LEDProcess:	
  2566                           
  2567                           ;LEDApplication.c: 9:     switch(ledData.LEDCurrentState)
  2568                           
  2569                           ;incstack = 0
  2570                           ; Regs used in _LEDProcess: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2571  0058  28D3               	goto	l1417
  2572  0059                     l1381:	
  2573                           
  2574                           ;LEDApplication.c: 12:             UARTTx("LED OFF\n");
  2575  0059  3059               	movlw	low (STR_1| (0+32768))
  2576  005A  00F3               	movwf	UARTTx@sendString
  2577  005B  3082               	movlw	high (STR_1| (0+32768))
  2578  005C  00F4               	movwf	UARTTx@sendString+1
  2579  005D  3181  21F6         	fcall	_UARTTx
  2580                           
  2581                           ;LEDApplication.c: 13:             LATCbits.LATC2 = 0;
  2582  005F  0022               	movlb	2	; select bank2
  2583  0060  110E               	bcf	14,2	;volatile
  2584                           
  2585                           ;LEDApplication.c: 14:             ledData.LEDOffTime = milliSec;
  2586  0061  0879               	movf	_milliSec+3,w	;volatile
  2587  0062  0020               	movlb	0	; select bank0
  2588  0063  00CE               	movwf	_ledData+8
  2589  0064  0878               	movf	_milliSec+2,w	;volatile
  2590  0065  00CD               	movwf	_ledData+7
  2591  0066  0877               	movf	_milliSec+1,w	;volatile
  2592  0067  00CC               	movwf	_ledData+6
  2593  0068  0876               	movf	_milliSec,w	;volatile
  2594  0069  00CB               	movwf	_ledData+5
  2595  006A                     l1387:	
  2596                           
  2597                           ;LEDApplication.c: 15:             ledData.LEDCurrentState = LED_WAIT;
  2598  006A  3002               	movlw	2
  2599  006B  00A0               	movwf	??_LEDProcess
  2600  006C  0820               	movf	??_LEDProcess,w
  2601  006D  00C6               	movwf	_ledData
  2602                           
  2603                           ;LEDApplication.c: 16:             break;
  2604  006E  0008               	return
  2605  006F                     l1389:	
  2606                           
  2607                           ;LEDApplication.c: 19:             UARTTx("LED ON\n");
  2608  006F  3074               	movlw	low (STR_2| (0+32768))
  2609  0070  00F3               	movwf	UARTTx@sendString
  2610  0071  3082               	movlw	high (STR_2| (0+32768))
  2611  0072  00F4               	movwf	UARTTx@sendString+1
  2612  0073  3181  21F6  3180   	fcall	_UARTTx
  2613                           
  2614                           ;LEDApplication.c: 20:             LATCbits.LATC2 = 1;
  2615  0076  0022               	movlb	2	; select bank2
  2616  0077  150E               	bsf	14,2	;volatile
  2617                           
  2618                           ;LEDApplication.c: 21:             ledData.LEDOnTime = milliSec;
  2619  0078  0879               	movf	_milliSec+3,w	;volatile
  2620  0079  0020               	movlb	0	; select bank0
  2621  007A  00CA               	movwf	_ledData+4
  2622  007B  0878               	movf	_milliSec+2,w	;volatile
  2623  007C  00C9               	movwf	_ledData+3
  2624  007D  0877               	movf	_milliSec+1,w	;volatile
  2625  007E  00C8               	movwf	_ledData+2
  2626  007F  0876               	movf	_milliSec,w	;volatile
  2627  0080  00C7               	movwf	_ledData+1
  2628  0081  286A               	goto	l1387
  2629  0082                     l1397:	
  2630                           
  2631                           ;LEDApplication.c: 26:             if (ledData.LEDOnTime > 0)
  2632  0082  084A               	movf	_ledData+4,w
  2633  0083  0449               	iorwf	_ledData+3,w
  2634  0084  0448               	iorwf	_ledData+2,w
  2635  0085  0447               	iorwf	_ledData+1,w
  2636  0086  1903               	skipnz
  2637  0087  28AB               	goto	l1405
  2638                           
  2639                           ;LEDApplication.c: 27:             {;LEDApplication.c: 28:                 if (milliSec 
      +                          - ledData.LEDOnTime >= 2000)
  2640  0088  0847               	movf	_ledData+1,w
  2641  0089  0276               	subwf	_milliSec,w	;volatile
  2642  008A  00A0               	movwf	??_LEDProcess
  2643  008B  0848               	movf	_ledData+2,w
  2644  008C  3B77               	subwfb	_milliSec+1,w	;volatile
  2645  008D  00A1               	movwf	??_LEDProcess+1
  2646  008E  0849               	movf	_ledData+3,w
  2647  008F  3B78               	subwfb	_milliSec+2,w	;volatile
  2648  0090  00A2               	movwf	??_LEDProcess+2
  2649  0091  084A               	movf	_ledData+4,w
  2650  0092  3B79               	subwfb	_milliSec+3,w	;volatile
  2651  0093  00A3               	movwf	??_LEDProcess+3
  2652  0094  0823               	movf	??_LEDProcess+3,w
  2653  0095  1D03               	btfss	3,2
  2654  0096  28A0               	goto	l1401
  2655  0097  0822               	movf	??_LEDProcess+2,w
  2656  0098  1D03               	btfss	3,2
  2657  0099  28A0               	goto	l1401
  2658  009A  30D0               	movlw	208
  2659  009B  0220               	subwf	??_LEDProcess,w
  2660  009C  3007               	movlw	7
  2661  009D  3B21               	subwfb	??_LEDProcess+1,w
  2662  009E  1C03               	btfss	3,0
  2663  009F  0008               	return
  2664  00A0                     l1401:	
  2665                           
  2666                           ;LEDApplication.c: 29:                 {;LEDApplication.c: 30:                     ledDa
      +                          ta.LEDOnTime = 0;
  2667  00A0  3000               	movlw	0
  2668  00A1  00CA               	movwf	_ledData+4
  2669  00A2  3000               	movlw	0
  2670  00A3  00C9               	movwf	_ledData+3
  2671  00A4  3000               	movlw	0
  2672  00A5  00C8               	movwf	_ledData+2
  2673  00A6  3000               	movlw	0
  2674  00A7  00C7               	movwf	_ledData+1
  2675                           
  2676                           ;LEDApplication.c: 31:                     ledData.LEDCurrentState = LED_OFF;
  2677  00A8  01C6               	clrf	_ledData
  2678  00A9  0AC6               	incf	_ledData,f
  2679  00AA  0008               	return
  2680  00AB                     l1405:	
  2681  00AB  084E               	movf	_ledData+8,w
  2682  00AC  044D               	iorwf	_ledData+7,w
  2683  00AD  044C               	iorwf	_ledData+6,w
  2684  00AE  044B               	iorwf	_ledData+5,w
  2685  00AF  1903               	skipnz
  2686  00B0  28D1               	goto	l1411
  2687                           
  2688                           ;LEDApplication.c: 36:             {;LEDApplication.c: 37:                 if (milliSec 
      +                          - ledData.LEDOffTime >= 2000)
  2689  00B1  084B               	movf	_ledData+5,w
  2690  00B2  0276               	subwf	_milliSec,w	;volatile
  2691  00B3  00A0               	movwf	??_LEDProcess
  2692  00B4  084C               	movf	_ledData+6,w
  2693  00B5  3B77               	subwfb	_milliSec+1,w	;volatile
  2694  00B6  00A1               	movwf	??_LEDProcess+1
  2695  00B7  084D               	movf	_ledData+7,w
  2696  00B8  3B78               	subwfb	_milliSec+2,w	;volatile
  2697  00B9  00A2               	movwf	??_LEDProcess+2
  2698  00BA  084E               	movf	_ledData+8,w
  2699  00BB  3B79               	subwfb	_milliSec+3,w	;volatile
  2700  00BC  00A3               	movwf	??_LEDProcess+3
  2701  00BD  0823               	movf	??_LEDProcess+3,w
  2702  00BE  1D03               	btfss	3,2
  2703  00BF  28C9               	goto	l1409
  2704  00C0  0822               	movf	??_LEDProcess+2,w
  2705  00C1  1D03               	btfss	3,2
  2706  00C2  28C9               	goto	l1409
  2707  00C3  30D0               	movlw	208
  2708  00C4  0220               	subwf	??_LEDProcess,w
  2709  00C5  3007               	movlw	7
  2710  00C6  3B21               	subwfb	??_LEDProcess+1,w
  2711  00C7  1C03               	btfss	3,0
  2712  00C8  0008               	return
  2713  00C9                     l1409:	
  2714                           
  2715                           ;LEDApplication.c: 38:                 {;LEDApplication.c: 39:                     ledDa
      +                          ta.LEDOffTime = 0;
  2716  00C9  3000               	movlw	0
  2717  00CA  00CE               	movwf	_ledData+8
  2718  00CB  3000               	movlw	0
  2719  00CC  00CD               	movwf	_ledData+7
  2720  00CD  3000               	movlw	0
  2721  00CE  00CC               	movwf	_ledData+6
  2722  00CF  3000               	movlw	0
  2723  00D0  00CB               	movwf	_ledData+5
  2724  00D1                     l1411:	
  2725                           
  2726                           ;LEDApplication.c: 40:                     ledData.LEDCurrentState = LED_ON;
  2727  00D1  01C6               	clrf	_ledData
  2728                           
  2729                           ;LEDApplication.c: 48:             break;
  2730  00D2  0008               	return
  2731  00D3                     l1417:	
  2732  00D3  0020               	movlb	0	; select bank0
  2733  00D4  0846               	movf	_ledData,w
  2734  00D5  00A0               	movwf	??_LEDProcess
  2735  00D6  01A1               	clrf	??_LEDProcess+1
  2736                           
  2737                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2738                           ; Switch size 1, requested type "simple"
  2739                           ; Number of cases is 1, Range of values is 0 to 0
  2740                           ; switch strategies available:
  2741                           ; Name         Instructions Cycles
  2742                           ; simple_byte            4     3 (average)
  2743                           ; direct_byte            8     6 (fixed)
  2744                           ; jumptable            260     6 (fixed)
  2745                           ;	Chosen strategy is simple_byte
  2746  00D7  0821               	movf	??_LEDProcess+1,w
  2747  00D8  3A00               	xorlw	0	; case 0
  2748  00D9  1903               	skipnz
  2749  00DA  28DC               	goto	l1515
  2750  00DB  28E7               	goto	l70
  2751  00DC                     l1515:	
  2752                           
  2753                           ; Switch size 1, requested type "simple"
  2754                           ; Number of cases is 3, Range of values is 0 to 2
  2755                           ; switch strategies available:
  2756                           ; Name         Instructions Cycles
  2757                           ; simple_byte           10     6 (average)
  2758                           ; direct_byte           12     6 (fixed)
  2759                           ; jumptable            260     6 (fixed)
  2760                           ;	Chosen strategy is simple_byte
  2761  00DC  0820               	movf	??_LEDProcess,w
  2762  00DD  3A00               	xorlw	0	; case 0
  2763  00DE  1903               	skipnz
  2764  00DF  286F               	goto	l1389
  2765  00E0  3A01               	xorlw	1	; case 1
  2766  00E1  1903               	skipnz
  2767  00E2  2859               	goto	l1381
  2768  00E3  3A03               	xorlw	3	; case 2
  2769  00E4  1903               	skipnz
  2770  00E5  2882               	goto	l1397
  2771  00E6  28E7               	goto	l70
  2772  00E7                     l70:	
  2773  00E7  0008               	return
  2774  00E8                     __end_of_LEDProcess:	
  2775                           
  2776                           	psect	text11
  2777  01F6                     __ptext11:	
  2778 ;; *************** function _UARTTx *****************
  2779 ;; Defined at:
  2780 ;;		line 79 in file "UART.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  sendString      2    3[COMMON] PTR unsigned char 
  2783 ;;		 -> STR_6(15), STR_5(14), STR_4(2), STR_3(19), 
  2784 ;;		 -> UARTprocess@receivedString(32), STR_2(8), STR_1(9), 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;		None
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      unsigned char 
  2789 ;; Registers used:
  2790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2796 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2798 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2799 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2800 ;;Total ram usage:        3 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    3
  2803 ;; This function calls:
  2804 ;;		Nothing
  2805 ;; This function is called by:
  2806 ;;		_LEDProcess
  2807 ;;		_UARTprocess
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           
  2812                           ;psect for function _UARTTx
  2813  01F6                     _UARTTx:	
  2814  01F6                     l1139:	
  2815                           ;UART.c: 79: uint8_t UARTTx(char *sendString);UART.c: 80: {;UART.c: 81:     while (*send
      +                          String)
  2816                           
  2817                           ;incstack = 0
  2818                           ; Regs used in _UARTTx: [wreg-fsr0h+status,2+status,0+pclath]
  2819                           
  2820                           
  2821                           ;UART.c: 81:     while (*sendString)
  2822  01F6  0873               	movf	UARTTx@sendString,w
  2823  01F7  0084               	movwf	4
  2824  01F8  0874               	movf	UARTTx@sendString+1,w
  2825  01F9  0085               	movwf	5
  2826  01FA  0012               	moviw fsr0++
  2827  01FB  1903               	btfsc	3,2
  2828  01FC  0008               	return
  2829  01FD                     l189:	
  2830  01FD  0023               	movlb	3	; select bank3
  2831  01FE  1C9E               	btfss	30,1	;volatile
  2832  01FF  29FD               	goto	l189
  2833                           
  2834                           ;UART.c: 84:         TXREG = *sendString;
  2835  0200  0873               	movf	UARTTx@sendString,w
  2836  0201  0084               	movwf	4
  2837  0202  0874               	movf	UARTTx@sendString+1,w
  2838  0203  0085               	movwf	5
  2839  0204  0800               	movf	0,w	;code access
  2840  0205  009A               	movwf	26	;volatile
  2841                           
  2842                           ;UART.c: 85:         sendString ++;
  2843  0206  3001               	movlw	1
  2844  0207  07F3               	addwf	UARTTx@sendString,f
  2845  0208  3000               	movlw	0
  2846  0209  3DF4               	addwfc	UARTTx@sendString+1,f
  2847  020A  29F6               	goto	l1139
  2848  020B                     __end_of_UARTTx:	
  2849                           
  2850                           	psect	text12
  2851  0282                     __ptext12:	
  2852 ;; *************** function _InterruptInit *****************
  2853 ;; Defined at:
  2854 ;;		line 32 in file "InterruptHandler.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;		None
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;		None
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		None
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2872 ;;Total ram usage:        0 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    3
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_main
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           
  2883                           ;psect for function _InterruptInit
  2884  0282                     _InterruptInit:	
  2885                           
  2886                           ;InterruptHandler.c: 34:     GIE = 1;
  2887                           
  2888                           ;incstack = 0
  2889                           ; Regs used in _InterruptInit: []
  2890  0282  178B               	bsf	11,7	;volatile
  2891                           
  2892                           ;InterruptHandler.c: 35:     PEIE = 1;
  2893  0283  170B               	bsf	11,6	;volatile
  2894                           
  2895                           ;InterruptHandler.c: 36:     TMR0IE = 1;
  2896  0284  168B               	bsf	11,5	;volatile
  2897                           
  2898                           ;InterruptHandler.c: 37:     RCIE = 1;
  2899  0285  0021               	movlb	1	; select bank1
  2900  0286  1691               	bsf	17,5	;volatile
  2901  0287  0008               	return
  2902  0288                     __end_of_InterruptInit:	
  2903                           
  2904                           	psect	intentry
  2905  0004                     __pintentry:	
  2906 ;; *************** function _timer0Interrupt *****************
  2907 ;; Defined at:
  2908 ;;		line 11 in file "InterruptHandler.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;		None
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2926 ;;Total ram usage:        0 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    2
  2929 ;; This function calls:
  2930 ;;		_fifoWrite
  2931 ;; This function is called by:
  2932 ;;		Interrupt level 1
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936  0004                     _timer0Interrupt:	
  2937                           
  2938                           ;incstack = 0
  2939  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2940                           
  2941                           ; Regs used in _timer0Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2942  0005  3180               	pagesel	$
  2943                           
  2944                           ;InterruptHandler.c: 13:     if (TMR0IF == 1)
  2945  0006  1D0B               	btfss	11,2	;volatile
  2946  0007  2827               	goto	i1l1335
  2947                           
  2948                           ;InterruptHandler.c: 14:     {;InterruptHandler.c: 15:         TMR0IF = 0;
  2949  0008  110B               	bcf	11,2	;volatile
  2950                           
  2951                           ;InterruptHandler.c: 16:         milliSec ++;
  2952  0009  3001               	movlw	1
  2953  000A  07F6               	addwf	_milliSec,f	;volatile
  2954  000B  3000               	movlw	0
  2955  000C  3DF7               	addwfc	_milliSec+1,f	;volatile
  2956  000D  3000               	movlw	0
  2957  000E  3DF8               	addwfc	_milliSec+2,f	;volatile
  2958  000F  3000               	movlw	0
  2959  0010  3DF9               	addwfc	_milliSec+3,f	;volatile
  2960                           
  2961                           ;InterruptHandler.c: 17:         secCounter ++;
  2962  0011  3001               	movlw	1
  2963  0012  0020               	movlb	0	; select bank0
  2964  0013  07D3               	addwf	_secCounter,f	;volatile
  2965  0014  3000               	movlw	0
  2966  0015  3DD4               	addwfc	_secCounter+1,f	;volatile
  2967                           
  2968                           ;InterruptHandler.c: 18:         if (secCounter == 1000)
  2969  0016  30E8               	movlw	232
  2970  0017  0653               	xorwf	_secCounter,w	;volatile
  2971  0018  3003               	movlw	3
  2972  0019  1903               	skipnz
  2973  001A  0654               	xorwf	_secCounter+1,w	;volatile
  2974  001B  1D03               	btfss	3,2
  2975  001C  2827               	goto	i1l1335
  2976                           
  2977                           ;InterruptHandler.c: 19:         {;InterruptHandler.c: 20:             sec ++;
  2978  001D  3001               	movlw	1
  2979  001E  07CF               	addwf	_sec,f	;volatile
  2980  001F  3000               	movlw	0
  2981  0020  3DD0               	addwfc	_sec+1,f	;volatile
  2982  0021  3000               	movlw	0
  2983  0022  3DD1               	addwfc	_sec+2,f	;volatile
  2984  0023  3000               	movlw	0
  2985  0024  3DD2               	addwfc	_sec+3,f	;volatile
  2986                           
  2987                           ;InterruptHandler.c: 21:             secCounter = 0;
  2988  0025  01D3               	clrf	_secCounter	;volatile
  2989  0026  01D4               	clrf	_secCounter+1	;volatile
  2990  0027                     i1l1335:	
  2991                           
  2992                           ;InterruptHandler.c: 25:     if (RCIF == 1)
  2993  0027  0020               	movlb	0	; select bank0
  2994  0028  1E91               	btfss	17,5	;volatile
  2995  0029  282C               	goto	i1l112
  2996                           
  2997                           ;InterruptHandler.c: 26:     {;InterruptHandler.c: 27:         fifoWrite();
  2998  002A  3181  2171         	fcall	_fifoWrite
  2999  002C                     i1l112:	
  3000  002C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3001  002D  0009               	retfie
  3002  002E                     __end_of_timer0Interrupt:	
  3003                           
  3004                           	psect	text14
  3005  0171                     __ptext14:	
  3006 ;; *************** function _fifoWrite *****************
  3007 ;; Defined at:
  3008 ;;		line 90 in file "UART.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  letter          1    2[COMMON] unsigned char 
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      unsigned char 
  3015 ;; Registers used:
  3016 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3023 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3024 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3025 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3026 ;;Total ram usage:        3 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:    1
  3029 ;; This function calls:
  3030 ;;		_checkUartFull
  3031 ;; This function is called by:
  3032 ;;		_timer0Interrupt
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           
  3037                           ;psect for function _fifoWrite
  3038  0171                     _fifoWrite:	
  3039                           
  3040                           ;UART.c: 92:     char letter = RCREG;
  3041                           
  3042                           ;incstack = 0
  3043                           ; Regs used in _fifoWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3044  0171  0023               	movlb	3	; select bank3
  3045  0172  0819               	movf	25,w	;volatile
  3046  0173  00F0               	movwf	??_fifoWrite
  3047  0174  0870               	movf	??_fifoWrite,w
  3048  0175  00F2               	movwf	fifoWrite@letter
  3049                           
  3050                           ;UART.c: 93:     if (!checkUartFull())
  3051  0176  3182  226B  3181   	fcall	_checkUartFull
  3052  0179  3A00               	xorlw	0
  3053  017A  1D03               	skipz
  3054  017B  29A4               	goto	i1l1309
  3055                           
  3056                           ;UART.c: 94:     {;UART.c: 95:         if (letter == '\n' ||
  3057  017C  300A               	movlw	10
  3058  017D  0672               	xorwf	fifoWrite@letter,w
  3059  017E  1903               	btfsc	3,2
  3060  017F  298B               	goto	i1l1297
  3061  0180  300D               	movlw	13
  3062  0181  0672               	xorwf	fifoWrite@letter,w
  3063  0182  1903               	btfsc	3,2
  3064  0183  298B               	goto	i1l1297
  3065  0184  0872               	movf	fifoWrite@letter,w
  3066  0185  1903               	btfsc	3,2
  3067  0186  298B               	goto	i1l1297
  3068  0187  3003               	movlw	3
  3069  0188  0672               	xorwf	fifoWrite@letter,w
  3070  0189  1D03               	btfss	3,2
  3071  018A  2991               	goto	i1l1301
  3072  018B                     i1l1297:	
  3073                           
  3074                           ;UART.c: 99:         {;UART.c: 100:             letter = '\0';
  3075  018B  01F2               	clrf	fifoWrite@letter
  3076                           
  3077                           ;UART.c: 101:             uData.currentState = UART_READ;
  3078  018C  3002               	movlw	2
  3079  018D  00F0               	movwf	??_fifoWrite
  3080  018E  0870               	movf	??_fifoWrite,w
  3081  018F  0020               	movlb	0	; select bank0
  3082  0190  00D9               	movwf	_uData
  3083  0191                     i1l1301:	
  3084                           
  3085                           ;UART.c: 103:         uartFifoBuff[fifoHead] = letter;
  3086  0191  0020               	movlb	0	; select bank0
  3087  0192  0856               	movf	_fifoHead,w
  3088  0193  3EF0               	addlw	240
  3089  0194  00F0               	movwf	??_fifoWrite
  3090  0195  01F1               	clrf	??_fifoWrite+1
  3091  0196  3022               	movlw	34
  3092  0197  3DF1               	addwfc	??_fifoWrite+1,f
  3093  0198  0870               	movf	??_fifoWrite,w
  3094  0199  0086               	movwf	6
  3095  019A  0871               	movf	??_fifoWrite+1,w
  3096  019B  0087               	movwf	7
  3097  019C  0872               	movf	fifoWrite@letter,w
  3098  019D  0081               	movwf	1
  3099                           
  3100                           ;UART.c: 104:         fifoHead = (fifoHead + 1) % 256;
  3101  019E  0856               	movf	_fifoHead,w
  3102  019F  3E01               	addlw	1
  3103  01A0  00F0               	movwf	??_fifoWrite
  3104  01A1  0870               	movf	??_fifoWrite,w
  3105  01A2  00D6               	movwf	_fifoHead
  3106  01A3  0008               	return
  3107  01A4                     i1l1309:	
  3108                           
  3109                           ;UART.c: 108:     {;UART.c: 109:         uData.currentState = FIFO_FULL;
  3110  01A4  3003               	movlw	3
  3111  01A5  00F0               	movwf	??_fifoWrite
  3112  01A6  0870               	movf	??_fifoWrite,w
  3113  01A7  0020               	movlb	0	; select bank0
  3114  01A8  00D9               	movwf	_uData
  3115  01A9  0008               	return
  3116  01AA                     __end_of_fifoWrite:	
  3117                           
  3118                           	psect	text15
  3119  026B                     __ptext15:	
  3120 ;; *************** function _checkUartFull *****************
  3121 ;; Defined at:
  3122 ;;		line 129 in file "UART.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      unsigned char 
  3129 ;; Registers used:
  3130 ;;		wreg
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3140 ;;Total ram usage:        0 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; This function calls:
  3143 ;;		Nothing
  3144 ;; This function is called by:
  3145 ;;		_fifoWrite
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           
  3150                           ;psect for function _checkUartFull
  3151  026B                     _checkUartFull:	
  3152                           
  3153                           ;UART.c: 131:     if ((fifoHead + 1) % 256 == fifoTail)
  3154                           
  3155                           ;incstack = 0
  3156                           ; Regs used in _checkUartFull: [wreg]
  3157  026B  0020               	movlb	0	; select bank0
  3158  026C  0A56               	incf	_fifoHead,w
  3159  026D  0655               	xorwf	_fifoTail,w
  3160  026E  1D03               	skipz
  3161  026F  2A72               	goto	i1l1167
  3162                           
  3163                           ;UART.c: 132:     {;UART.c: 133:         return 1;
  3164  0270  3001               	movlw	1
  3165  0271  0008               	return
  3166  0272                     i1l1167:	
  3167                           
  3168                           ;UART.c: 136:     {;UART.c: 137:         return 0;
  3169  0272  3000               	movlw	0
  3170  0273  0008               	return
  3171  0274                     __end_of_checkUartFull:	
  3172  007E                     btemp	set	126	;btemp
  3173  007E                     int$flags	set	126
  3174  007E                     wtemp0	set	126


Data Sizes:
    Strings     65
    Constant    0
    Data        0
    BSS         56
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     38      58
    BANK1            80      0      32
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            32      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    UARTTx@sendString	PTR unsigned char  size(2) Largest target is 32
		 -> STR_6(CODE[15]), STR_5(CODE[14]), STR_4(CODE[2]), STR_3(CODE[19]), 
		 -> UARTprocess@receivedString(BANK0[32]), STR_2(CODE[8]), STR_1(CODE[9]), 

    sp__fifoRead	PTR unsigned char  size(2) Largest target is 256
		 -> uartFifoBuff(BIGRAM[256]), NULL(NULL[0]), 

    UARTprocess@receivePtr	PTR unsigned char  size(2) Largest target is 256
		 -> uartFifoBuff(BIGRAM[256]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _UARTprocess->_UARTTx
    _UARTprocess->_fifoRead
    _LEDProcess->_UARTTx

Critical Paths under _timer0Interrupt in COMMON

    _timer0Interrupt->_fifoWrite

Critical Paths under _main in BANK0

    _main->_UARTprocess

Critical Paths under _timer0Interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer0Interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer0Interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer0Interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer0Interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer0Interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timer0Interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _timer0Interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _timer0Interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _timer0Interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _timer0Interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _timer0Interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _timer0Interrupt in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1362
                      _InterruptInit
                         _LEDProcess
                            _LEDinit
                         _Timer0Init
                           _UARTinit
                        _UARTprocess
                     _oscillatorInit
                           _portInit
 ---------------------------------------------------------------------------------
 (1) _portInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _oscillatorInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UARTprocess                                         38    38      0     785
                                              0 BANK0     38    38      0
                             _UARTTx
                     _checkUartEmpty
                          _fifoPurge
                           _fifoRead
 ---------------------------------------------------------------------------------
 (2) _fifoRead                                             3     3      0      23
                                              3 COMMON     3     3      0
                     _checkUartEmpty
 ---------------------------------------------------------------------------------
 (3) _checkUartEmpty                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _fifoPurge                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UARTinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDProcess                                           4     4      0     577
                                              0 BANK0      4     4      0
                             _UARTTx
 ---------------------------------------------------------------------------------
 (2) _UARTTx                                               3     1      2     577
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _InterruptInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _timer0Interrupt                                      0     0      0     112
                          _fifoWrite
 ---------------------------------------------------------------------------------
 (5) _fifoWrite                                            3     3      0     112
                                              0 COMMON     3     3      0
                      _checkUartFull
 ---------------------------------------------------------------------------------
 (6) _checkUartFull                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InterruptInit
   _LEDProcess
     _UARTTx
   _LEDinit
   _Timer0Init
   _UARTinit
   _UARTprocess
     _UARTTx
     _checkUartEmpty
     _fifoPurge
     _fifoRead
       _checkUartEmpty
   _oscillatorInit
   _portInit

 _timer0Interrupt (ROOT)
   _fifoWrite
     _checkUartFull

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      3A       5       72.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      20       7       40.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      64      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               20      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      64      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat May 25 14:12:57 2019

              __CFG_CP$OFF 0000            _timer0Interrupt 0004                         l70 00E7  
    __end_of_checkUartFull 0274                __CFG_LVP$ON 0000                ?_LEDProcess 0070  
                      l184 0170                        l189 01FD                        _GIE 005F  
                      u450 00F1               __CFG_CPD$OFF 0000                        _sec 004F  
             __CFG_BORV$LO 0000     __end_of_checkUartEmpty 026B                       l1401 00A0  
                     l1129 0269                       l1139 01F6                       l1411 00D1  
                     l1405 00AB                       l1149 01B3                       l1431 00FB  
                     l1409 00C9                       l1417 00D3                       l1513 015F  
                     l1441 0120                       l1515 00DC                       l1427 00F5  
                     l1381 0059                       l1455 0150                       l1447 0141  
                     l1439 0103                       l1449 0144                       l1457 0157  
                     l1387 006A                       l1397 0082                       l1389 006F  
                     l1469 01DA                       STR_1 0259                       STR_2 0274  
                     STR_3 020B                       STR_4 024B                       STR_5 023F  
                     STR_6 0230            __end_of_LEDinit 01F6                       _BRGH 0CF2  
                     _CREN 0CEC                       _PEIE 005E                       _RCIE 048D  
                     _RCIF 008D                       _SPEN 0CEF                       _TRMT 0CF1  
                     _TXEN 0CF5                       _SYNC 0CF4               __CFG_WRT$OFF 0000  
                     _main 01C8                       fsr0h 0005                       fsr1h 0007  
                     indf0 0000                       fsr0l 0004                       indf1 0001  
                     fsr1l 0006                       btemp 007E                       start 002E  
            __CFG_IESO$OFF 0000  UARTprocess@receivedString 0022                      ?_main 0070  
                    _BRG16 0CFB              __CFG_WDTE$OFF 0000                      i1l112 002C  
                    _RCREG 0199                      _TRISA 008C                      _TRISB 008D  
                    _TXREG 019A             __CFG_FCMEN$OFF 0000            ?_checkUartEmpty 0070  
                    _uData 0059           __end_of_UARTinit 0230             __CFG_BOREN$OFF 0000  
                    status 0003                      wtemp0 007E        __size_of_LEDProcess 0090  
  __end_of_timer0Interrupt 002E             __CFG_MCLRE$OFF 0000            __initialization 0030  
             __end_of_main 01E1                     ??_main 0076             __CFG_PLLEN$OFF 0000  
                ??_LEDinit 0073                     i1l1301 0191                     i1l1309 01A4  
                   i1l1167 0272                     i1l1335 0027                     i1l1297 018B  
                   _OSCCON 0099                     _TMR0IE 005D                     _TMR0IF 005A  
                   _SPBRGH 019C                     _SPBRGL 019B                     _UARTTx 01F6  
           __CFG_PWRTE$OFF 0000           __end_of_fifoRead 01C8                 _Timer0Init 0290  
   __size_of_InterruptInit 0006                     _uartRX 0057               ?_UARTprocess 0070  
         __end_of_portInit 0282    __end_of__initialization 0054           ?_timer0Interrupt 0070  
           __pcstackCOMMON 0070                  ?_UARTinit 0070               ??_LEDProcess 0020  
  __size_of_oscillatorInit 0004         __size_of_fifoPurge 0004         __size_of_fifoWrite 0039  
            _InterruptInit 0282                 __pbssBANK0 0046                 __pbssBANK1 00A0  
                  ?_UARTTx 0073         __end_of_LEDProcess 00E8                ?_Timer0Init 0070  
               __pmaintext 01C8                 __pintentry 0004                 ??_UARTinit 0073  
         ??_checkUartEmpty 0073                    _LEDinit 01E1                  ?_fifoRead 0071  
                  _RXDTSEL 08EF             ?_InterruptInit 0070                    _TXCKSEL 08EA  
          __size_of_UARTTx 0015     __size_of_checkUartFull 0009          __end_of_fifoPurge 0290  
        __end_of_fifoWrite 01AA           _fullWordReceived 0058                  ?_portInit 0070  
               _secCounter 0053            __CFG_STVREN$OFF 0000                    _ledData 0046  
                  __ptext1 027C                    __ptext2 0288                    __ptext3 00E8  
                  __ptext4 01AA                    __ptext5 0262                    __ptext6 028C  
                  __ptext7 021E                    __ptext8 0290                    __ptext9 01E1  
      __size_of_Timer0Init 0004                 ??_fifoRead 0073       __size_of_UARTprocess 0089  
                  clrloop0 024E       end_of_initialization 0054           __CFG_CLKOUTEN$ON 0000  
               ??_portInit 0073              _checkUartFull 026B             _oscillatorInit 0288  
         __CFG_FOSC$INTOSC 0000                  _TRISCbits 008E            ??_InterruptInit 0073  
           __end_of_UARTTx 020B      UARTprocess@receivePtr 0044     __end_of_oscillatorInit 028C  
           ?_checkUartFull 0070          __size_of_UARTinit 0012           UARTTx@sendString 0073  
      start_initialization 0030                   ??_UARTTx 0075               ??_Timer0Init 0073  
          ?_oscillatorInit 0070   __size_of_timer0Interrupt 002A                __pbssBIGRAM 22F0  
              __pbssCOMMON 0076                  ___latbits 0002                   ?_LEDinit 0070  
            __pcstackBANK0 0020         __end_of_Timer0Init 0294          __size_of_fifoRead 001E  
          fifoWrite@letter 0072                  _fifoPurge 028C            ??_checkUartFull 0070  
                _fifoWrite 0171          __size_of_portInit 0006                   _LATCbits 010E  
                clear_ram0 024D                 ?_fifoPurge 0070                 ?_fifoWrite 0070  
                 _UARTinit 021E              ??_UARTprocess 0020          ??_timer0Interrupt 0073  
         __size_of_LEDinit 0015    __size_of_checkUartEmpty 0009                   _fifoHead 0056  
                 _fifoRead 01AA                   _fifoTail 0055                   __ptext10 0058  
                 __ptext11 01F6                   __ptext12 0282                   __ptext14 0171  
                 __ptext15 026B      __end_of_InterruptInit 0288        __end_of_UARTprocess 0171  
            __size_of_main 0019                   _milliSec 0076               _uartFifoBuff 22F0  
         ??_oscillatorInit 0073                   _portInit 027C                   int$flags 007E  
              ??_fifoPurge 0073                ??_fifoWrite 0070                 _LEDProcess 0058  
      fifoRead@returnIndex 0075           UARTprocess@F3113 00A0                   intlevel1 0000  
            __pstringtext1 020B              __pstringtext2 0230              __pstringtext3 023F  
            __pstringtext4 0259              __pstringtext5 0274              __pstringtext6 0000  
               _OPTION_REG 0095                _UARTprocess 00E8             _checkUartEmpty 0262  
             UARTprocess@i 0043  
